<?xml version="1.0" encoding="utf-8" ?>
<SqlList>
	<TransportList>
		<MainSQL>
			SELECT CC.CSTID
			, H.FROM_PORT_iD AS 요청포트
			, H.TO_PORT_ID AS 목적포트
			, H.CSTSTAT AS 상태
			, CC.ABNORM_TRF_RSN_CODE AS ATRC
			, CC.CURR_LOTID AS LOTID
			, WA.LANE_ID AS LANE_ID
			, CONVERT(CHAR(23), H.INSDTTM, 20) AS 요청시각
			, CONVERT(CHAR(23), H.UPDDTTM, 20) AS 수정시각
			, H.TRF_CODE
			, W.ROUTID AS ROUT
			, W.PROCID AS PROCID
			, W.WIPSTAT AS WIP
			, H.RTD_RULE_ID
			, H.CMD_STAT_CODE AS 진행상태
			, H.INSUSER AS 요청
			, H.REQ_SEQNO AS 순번
			, H.CNCL_REQ_FLAG AS 취소
			, (CASE WHEN (DATEDIFF(minute, H.INSDTTM, GETDATE())>=60) THEN '1' ELSE 'O' END)  AS CMDCHK
			, H.RSPN_CODE AS RSPN
			, C.CMCDNAME AS ERR_MSG
			FROM CARRIER CC with(nolock)
		</MainSQL>
		<Option>
			<Option1>
				INNER JOIN TB_MHS_TRF_CMD_HIST H with(nolock) ON H.CSTID = CC.CSTID  
			</Option1>
			<Option2>
				INNER JOIN TB_MHS_TRF_CMD H with(nolock) ON H.CSTID = CC.CSTID 
			</Option2>
			<Option3>
				LEFT JOIN WIP W with(nolock) ON W.LOTID = CC.CURR_LOTID 
				LEFT JOIN WIPATTR WA with(nolock) ON WA.LOTID = W.LOTID
				LEFT JOIN COMMONCODE C with(nolock) ON C.CMCDTYPE = 'TRF_REQ_ERR_CODE' AND C.CMCODE = H.RSPN_CODE
			</Option3>
			<Option4>
				WHERE  1=1
			</Option4>
			<Option5>
				WHERE CONVERT(CHAR(10), H.INSDTTM, 20) BETWEEN @StartDate AND @EndDate
			</Option5>
			<Option6>
				AND WA.LANE_ID LIKE @LANE_ID
			</Option6>
			<Option7>
				AND H.CMD_STAT_CODE IN ('MOVING','RECEIVE','ABNORMAL_END')
                AND ISNULL(H.CNCL_REQ_FLAG, '') NOT IN ('Y', 'S')
			</Option7>
			<Option8>
				AND H.CMD_STAT_CODE IN ('ABNORMAL_END')
			</Option8>
			<Option9>
				AND H.CMD_STAT_CODE IN ('MOVING','RECEIVE')
				AND ISNULL(H.CNCL_REQ_FLAG, '') NOT IN ('Y', 'S')
			</Option9>
			<Option10>
				<![CDATA[AND H.CMD_STAT_CODE <> 'DELETE']]></Option10>
			<Option11>
				AND H.CSTSTAT = @CSTSTAT
			</Option11>
			<Option12>
				AND H.CSTID LIKE @CSTID
			</Option12>
			<Option13>
				AND H.FROM_PORT_ID LIKE @ReqPortId
			</Option13>
			<Option14>
				AND H.TO_PORT_ID LIKE @ToPortId
			</Option14>
			<Option15>
				AND CC.ABNORM_TRF_RSN_CODE = 'STACK_VALID_ERROR 
			</Option15>
			<Option16>
				<![CDATA[AND H.INSUSER <> 'MCS(SYNC)' ORDER BY H.INSDTTM DESC]]>
			</Option16>
      <Option17>
		  select
		  PORT_ID,
		  EVENT_TYPE_CODE as ETC,
		  TRF_END_CODE as TEC ,
		  EVENT_CODE,
		  INSDTTM
		  from TB_MHS_TRF_EVENT_HIST with (NOLOCK) WHERE TRF_CODE = @TRF_CODE
		  order by INSDTTM desc
	  </Option17>
			<Option18>
				SELECT C.CSTID,                    C.CSTSTAT,                      C.LOAD_REP_CSTID,
				C.CST_LOAD_LOCATION_CODE,   C.CURR_RACK_ID,                 C.CURR_LOTID,      C.ABNORM_TRF_RSN_CODE,
				C.EQPT_CUR AS EQPTID,       C.PORT_CUR AS PORT_ID,          W.ROUTID,           W.WIPSTAT,
				L.LOTTYPE,                  WA.DAY_GR_LOTID AS ASSY_LOTID,  WA.SPCL_FLAG,       WA.SMPL_ISS_TYPE_CODE,
				WA.LOT_DETL_TYPE_CODE,      WA.DFCT_LIMIT_OVER_FLAG,        WA.SPCL_NOTE,
				WA.FORM_SPCL_GR_ID,         W.PROCID,                       C.TRAY_TYPE_CODE,
				CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM,                WA.DFCT_OCCR_EQPTID, CONVERT(CHAR(23),WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM ,
				WA.SCRP_TRAY_FLAG,          WA.TRAY_CNVR_BCR_SCAN_COUNT
				FROM Carrier C with(nolock)
				LEFT JOIN WIP W WITH(NOLOCK) ON C.CURR_LOTID = W.LOTID
				LEFT JOIN WIPATTR WA WITH(NOLOCK) ON WA.LOTID = W.LOTID
				LEFT JOIN LOT L WITH(NOLOCK) ON L.LOTID = WA.LOTID
				WHERE (LOAD_REP_CSTID LIKE @CSTID or C.CSTID LIKE @CSTID )
				ORDER BY UPDDTTM DESC,CST_LOAD_LOCATION_CODE DESC
			</Option18>
		</Option>
    <ColumnOption>
      <CARRIER_COLUMN>
        CSTID
      </CARRIER_COLUMN>
    </ColumnOption>
	</TransportList>
	<ReqInfomation>
		<MainSQL>
				SELECT
				   REQ.REQ_SEQNO
				 , REQ.CSTID AS CSTID
				 , REQ.CSTSTAT AS CSTSTAT_R
				 , REQ.EQPTID AS EQPTID_R
				 , REQ.PORT_ID AS PORT_ID_R
				 , REQ.REQ_TYPE_CODE AS REQ_TYPE_CODE_R
				 , REQ.PRCS_TYPE_CODE
				 , REQ.RTD_RULE_ID AS RTD_RULE_ID_R
				 , REQ.INSUSER AS INSUSER_R
				 , CONVERT(CHAR(23), REQ.INSDTTM, 20) AS INSDTTM_R
				 , CONVERT(CHAR(23), REQ.UPDDTTM, 20) AS UPDDTTM_R
				 , REQ.REQ_STAT_CODE
				 , REQ.REQ_SEQS
				 , REQ.RTD_EXEC_LOG_CNTT
				 , REQ.ERR_CODE
				 , C.CMCDNAME AS ERR_DESC
				FROM TB_MHS_TRF_REQ REQ with(nolock)
				LEFT JOIN COMMONCODE     C with(nolock) ON C.CMCDTYPE = 'TRF_REQ_ERR_CODE' AND C.CMCODE = REQ.ERR_CODE
				WHERE 1 = 1 
			</MainSQL>
		<Option>
			<Option1>
				AND REQ.CSTID like @CSTID 
			</Option1> 
			<Option2>
				 AND CONVERT(CHAR(10), REQ.INSDTTM, 20) BETWEEN @StartDate AND @EndDate 
			</Option2>
			<Option3>
				AND REQ.EQPTID LIKE @EQPTID 
			</Option3>
			<Option4>
			   AND REQ.RTD_RULE_ID LIKE @RULEID
			 </Option4>
			<Option5>
				AND REQ.REQ_STAT_CODE = 'QUERY' 
			</Option5>
			<Option6>
				ORDER BY REQ.CSTID, REQ.UPDDTTM DESC 
			</Option6>
      <Option7>
        SELECT C.CSTID,                    C.CSTSTAT,                      C.LOAD_REP_CSTID,
        C.CST_LOAD_LOCATION_CODE,   C.CURR_RACK_ID,                 C.CURR_LOTID,      C.ABNORM_TRF_RSN_CODE,
        C.EQPT_CUR AS EQPTID,       C.PORT_CUR AS PORT_ID,          W.ROUTID,           W.WIPSTAT,
        L.LOTTYPE,                  WA.DAY_GR_LOTID AS ASSY_LOTID,  WA.SPCL_FLAG,       WA.SMPL_ISS_TYPE_CODE,
        WA.LOT_DETL_TYPE_CODE,      WA.DFCT_LIMIT_OVER_FLAG,        WA.SPCL_NOTE,
        WA.FORM_SPCL_GR_ID,         W.PROCID,                       C.TRAY_TYPE_CODE,
        CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM,                WA.DFCT_OCCR_EQPTID, CONVERT(CHAR(23),WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM ,
        WA.SCRP_TRAY_FLAG,          WA.TRAY_CNVR_BCR_SCAN_COUNT
        FROM Carrier C with(nolock)
        LEFT JOIN WIP W WITH(NOLOCK) ON C.CURR_LOTID = W.LOTID
        LEFT JOIN WIPATTR WA WITH(NOLOCK) ON WA.LOTID = W.LOTID
        LEFT JOIN LOT L WITH(NOLOCK) ON L.LOTID = WA.LOTID
        WHERE (LOAD_REP_CSTID LIKE @CSTID or C.CSTID LIKE @CSTID )
        ORDER BY UPDDTTM DESC,CST_LOAD_LOCATION_CODE DESC
      </Option7>
		</Option>
	</ReqInfomation>
	<SearchTransfer>
		<MainSQL>
			SELECT
			CSTID
			, FROM_EQPTID
			, FROM_PORT_iD
			, TO_EQPTID
			, TO_PORT_ID
			, CSTSTAT
			, RTD_RULE_ID
			, CMD_STAT_CODE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			, (CASE WHEN (DATEDIFF(minute, INSDTTM, GETDATE())>=60) THEN '1' ELSE 'O' END)  AS CMDCHK
			FROM TB_MHS_TRF_CMD_HIST with(nolock)
			WHERE INSDTTM BETWEEN @StartDate AND @EndDate
		</MainSQL>
		<Option>
			<Option1>
				AND CSTID LIKE @CSTID
			</Option1>
			<Option2>
				AND FROM_PORT_ID LIKE @ReqEQP
			</Option2>
			<Option3>
				AND TO_PORT_ID LIKE @ToEQP
			</Option3>
			<Option4>
				AND CSTSTAT = @CSTSTAT
			</Option4>
			<Option5>
				AND CMD_STAT_CODE = @MovingState
			</Option5>
			<Option6>
				AND RTD_RULE_ID = @RuleId
			</Option6>			
		</Option>
	</SearchTransfer>
	<SearchReq>
		<MainSQL>
			SELECT top 1000 REQ_SEQNO, CSTID, CSTSTAT, EQPTID, PORT_ID,
			REQ_TYPE_CODE, PRCS_TYPE_CODE, REQ_STAT_CODE, RTD_RULE_ID, REQ_SEQS, RTD_EXEC_LOG_CNTT, ERR_CODE,
			INSUSER, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			FROM TB_MHS_TRF_REQ_HIST with(nolock)
			WHERE INSDTTM BETWEEN @StartDate AND @EndDate
		</MainSQL>
		<Option>
			<Option1>
				AND CSTID LIKE @CSTID
			</Option1>
			<Option2>
				AND PORT_ID LIKE @PORT_ID
			</Option2>
			<Option3>
				AND CSTSTAT = @CSTSTAT
			</Option3>
			<Option4>
				ORDER BY INSDTTM DESC
			</Option4>
		</Option>
	</SearchReq>
	<SearchDeleteTransfer>
		<MainSQL>
			SELECT
			CSTID
			, FROM_EQPTID
			, FROM_PORT_iD
			, TO_EQPTID
			, TO_PORT_ID
			, CSTSTAT
			, RTD_RULE_ID
			, CMD_STAT_CODE
			, INSUSER
			, CONVERT(NVARCHAR(20), MAX(INSDTTM),20) AS LASTINSDTTM
			, COUNT(CSTID)  AS CNT
			FROM TB_MHS_TRF_CMD_HIST with(nolock)
			WHERE CONVERT(NVARCHAR(10), INSDTTM, 20) BETWEEN @StartDate AND @EndDate
			AND CMD_STAT_CODE = 'DELETE'
			GROUP BY CSTID, FROM_EQPTID, FROM_PORT_ID, TO_EQPTID, TO_PORT_ID, CSTSTAT, RTD_RULE_ID, CMD_STAT_CODE, INSUSER
			ORDER BY MAX(INSDTTM) DESC
		</MainSQL>
		<Option>
			<Option1>
				AND (EXCT_MSG LIKE @ErrText OR EXCT_TYPE LIKE @ErrText)
			</Option1>
			<Option2>
				ORDER BY INSDTTM DESC
			</Option2>
		</Option>
	</SearchDeleteTransfer>
	<CstActHistSearch>
		<MainSQL>
			SELECT
			CSTID
			, LOAD_REP_CSTID
			, ACTID
			, CONVERT(CHAR(23), ACTDTTM, 20)  AS ACTDTTM
			, CSTSTAT
			, EQPTID
			, PROCID
			, LOTID
			, TRF_STAT_CODE
			, CST_LOAD_LOCATION_CODE
			, PORT_ID
			, RACK_ID
			, CSTIUSE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			FROM tb_sfc_cst_act_hist with(nolock)
			where ACTDTTM BETWEEN @StartDate AND @EndDate
		</MainSQL>
		<Option>
			<Option1>
				AND EQPTID like @EQPTID
			</Option1>
			<Option2>
				AND CSTID like @CSTID
			</Option2>
			<Option3>
				ORDER BY ACTDTTM DESC
			</Option3>
		</Option>
	</CstActHistSearch>
	<CstEventHistSearch>
		<MainSQL>
			SELECT
			CSTID
			, CSTSTAT as 상태
			, LOTID
			, PROCID
			, EQPTID
			, PORT_ID
			, RACK_ID
			, EVENT_CODE
			, EVENT_TYPE_CODE as ETC
			, TRF_END_CODE AS TEC
			, FINL_TO_EQPTID as EQPT_ID
			, FINL_TO_PORT_ID as PORT_ID
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20)  AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20)  AS UPDDTTM
			FROM TB_MHS_TRF_EVENT_HIST with(nolock)
			where CSTID like @CSTID
			and INSDTTM BETWEEN @StartDate AND @EndDate
			ORDER BY INSDTTM DESC
		</MainSQL>
		<Option>
		</Option>
	</CstEventHistSearch>
</SqlList>