<?xml version="1.0" encoding="utf-8" ?>
<SqlList>
  <SearchTransportReq>
	<MainSQL>
		SELECT CC.CSTID
		, H.FROM_PORT_iD AS 요청포트
		, H.TO_PORT_ID AS 목적포트
		, H.CSTSTAT AS 상태
		, CC.CURR_LOTID AS LOTID
		, WA.LANE_ID AS LANE_ID
		, H.CMD_STAT_CODE AS 진행상태
		, W.ROUTID AS ROUT
		, W.PROCID AS PROCID
		, W.WIPSTAT AS WIP
		, CONVERT(CHAR(23), H.INSDTTM, 20) AS 요청시각
		, CONVERT(CHAR(23), H.UPDDTTM, 20) AS 수정시각
		, CC.ABNORM_TRF_RSN_CODE AS ATRC
		, H.RTD_RULE_ID
		, H.TRF_CODE
		, H.INSUSER AS 요청
		, H.REQ_SEQNO AS 순번
		, H.CNCL_REQ_FLAG AS 취소
		, (CASE WHEN (DATEDIFF(minute, H.INSDTTM, GETDATE())>=60) THEN '1' ELSE 'O' END)  AS CMDCHK
		, H.RSPN_CODE AS RSPN
		, C.CMCDNAME AS ERR_MSG
		FROM CARRIER CC with(nolock)
		INNER JOIN TB_MHS_TRF_CMD H with(nolock) ON H.CSTID = CC.CSTID
		LEFT JOIN WIP W with(nolock) ON W.LOTID = CC.CURR_LOTID
		LEFT JOIN WIPATTR WA with(nolock) ON WA.LOTID = W.LOTID
		LEFT JOIN COMMONCODE C with(nolock) ON C.CMCDTYPE = 'TRF_REQ_ERR_CODE' AND C.CMCODE = H.RSPN_CODE
		WHERE H.CMD_STAT_CODE IN (@CMD_STAT_CODE_LIST)
		AND ISNULL(H.CNCL_REQ_FLAG, '') NOT IN ('Y', 'S')
		</MainSQL>
		<Option>
			<Option1 type="if" condition="not_equal" key="LaneId" dataType="string" default="">
				AND WA.LANE_ID LIKE @LANE_ID
			</Option1>
			<Option2 type="cststat"  condition="not_equal" key="CstStat" dataType="int" default="0">
				AND H.CSTSTAT = @CSTSTAT
			</Option2>
			<Option3 type="if" condition="not_equal" key="CstId" dataType="string" default="">
				AND H.CSTID LIKE @CSTID
			</Option3>
			<Option4 type="if" condition="not_equal" key="ReqPortId" dataType="string" default="">
				AND H.FROM_PORT_ID LIKE @ReqPortId
			</Option4>
			<Option5 type="if" condition="not_equal" key="ToPortId" dataType="string" default="">
				AND H.TO_PORT_ID LIKE @ToPortId
			</Option5>
			<Option6 type="if" condition="equal" key="isFaulty" dataType="bool" default="True">
				AND CC.ABNORM_TRF_RSN_CODE = 'STACK_VALID_ERROR 
			</Option6>
			<Option7 type="none" condition="" key="" dataType="" default="" >
				<![CDATA[AND H.INSUSER <> 'MCS(SYNC)' ORDER BY H.INSDTTM DESC]]>
			</Option7>
		</Option>
	  <AdditionalVariable>
		  <CMD_STAT_CODE_LIST dataType="List" default=""/>
	  </AdditionalVariable>
	</SearchTransportReq>
  <SearchTrf>
    <MainSQL>
      select
      PORT_ID
      , EVENT_TYPE_CODE as ETC
      , TRF_END_CODE as TEC 
      , EVENT_CODE
      , INSDTTM
      from TB_MHS_TRF_EVENT_HIST with (NOLOCK) WHERE TRF_CODE = @TRF_CODE
      order by INSDTTM desc
    </MainSQL>
    <Option>
    </Option>
	  <AdditionalVariable>
		  <CMD_STAT_CODE_LIST dataType="List" default=""/>
	  </AdditionalVariable>
  </SearchTrf>
  <ReqInfomation>
		<MainSQL>
				SELECT
				   REQ.REQ_SEQNO as 번호
				 , REQ.CSTID AS CSTID 
				 , REQ.CSTSTAT as 상태
				 , REQ.EQPTID AS 설비명
				 , REQ.PORT_ID AS 포트명
				 , REQ.REQ_TYPE_CODE AS 요청코드
				 , REQ.PRCS_TYPE_CODE AS 코드
				 , REQ.RTD_RULE_ID
				 , REQ.INSUSER AS 요청자
				 , CONVERT(CHAR(23), REQ.INSDTTM, 20) AS INSDTTM
				 , CONVERT(CHAR(23), REQ.UPDDTTM, 20) AS UPDDTTM
				 , REQ.REQ_STAT_CODE
				 , REQ.REQ_SEQS
				 , REQ.RTD_EXEC_LOG_CNTT
				 , REQ.ERR_CODE
				 , C.CMCDNAME AS ERR_DESC
				FROM TB_MHS_TRF_REQ REQ with(nolock)
				LEFT JOIN COMMONCODE     C with(nolock) ON C.CMCDTYPE = 'TRF_REQ_ERR_CODE' AND C.CMCODE = REQ.ERR_CODE
				WHERE 1 = 1 
			</MainSQL>
		<Option>
			<Option1 type="none" condition="" key="" dataType="" default="">
				AND REQ.CSTID like @CSTID 
			</Option1>
      <Option2 type="none" condition="" key="" dataType="" default="">
				 AND CONVERT(CHAR(10), REQ.INSDTTM, 20) BETWEEN @StartDate AND @EndDate 
			</Option2>
      <Option3 type="none" condition="" key="" dataType="" default="">
				AND REQ.EQPTID LIKE @EQPTID 
			</Option3>
      <Option4 type="none" condition="" key="" dataType="" default="">
			   AND REQ.RTD_RULE_ID LIKE @RULEID
			 </Option4>
			<Option5 type="none" condition="" key="" dataType="" default="">
				AND REQ.REQ_STAT_CODE = 'QUERY' 
			</Option5>
			<Option6 type="none" condition="" key="" dataType="" default="">
				ORDER BY REQ.CSTID, REQ.UPDDTTM DESC 
			</Option6>
		</Option>
	  <AdditionalVariable>
	  </AdditionalVariable>
	</ReqInfomation>
	<SearchTransfer>
		<MainSQL>
			SELECT
			CSTID
			, FROM_EQPTID
			, FROM_PORT_iD
			, TO_EQPTID
			, TO_PORT_ID
			, CSTSTAT
			, RTD_RULE_ID
			, CMD_STAT_CODE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			, (CASE WHEN (DATEDIFF(minute, INSDTTM, GETDATE())>=60) THEN '1' ELSE 'O' END)  AS CMDCHK
			FROM TB_MHS_TRF_CMD_HIST with(nolock)
			WHERE INSDTTM BETWEEN @StartDate AND @EndDate
		</MainSQL>
		<Option>
			<Option1 type="none" condition="" key="" dataType="" default="">
				AND CSTID LIKE @CSTID
			</Option1>
			<Option2 type="none" condition="" key="" dataType="" default="">
				AND FROM_PORT_ID LIKE @ReqEQP
			</Option2>
			<Option3 type="none" condition="" key="" dataType="" default="">
				AND TO_PORT_ID LIKE @ToEQP
			</Option3>
			<Option4 type="none" condition="" key="" dataType="" default="">
				AND CSTSTAT = @CSTSTAT
			</Option4>
			<Option5 type="none" condition="" key="" dataType="" default="">
				AND CMD_STAT_CODE = @MovingState
			</Option5>
            <Option6 type="none" condition="" key="" dataType="" default="">
				AND RTD_RULE_ID = @RuleId
			</Option6>			
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</SearchTransfer>
	<SearchReq>
		<MainSQL>
			WITH TT_DATA AS (
				SELECT top 1000 *
				FROM TB_MHS_TRF_REQ_HIST with(nolock)
				WHERE INSDTTM BETWEEN @StartDate AND @EndDate
					AND CSTID LIKE @CSTID
					AND PRCS_TYPE_CODE like @PRCS_TYPE_CODE
				ORDER BY INSDTTM  DESC
			)
			SELECT
			CSTID
			, CSTSTAT AS 상태
			, REQ_STAT_CODE
			, EQPTID
			, PORT_ID
			, REQ_TYPE_CODE AS 요청
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			, PRCS_TYPE_CODE
			, RTD_RULE_ID
			, REQ_SEQS
			, ERR_CODE
			, RTD_EXEC_LOG_CNTT
			, INSUSER
			, REQ_SEQNO
			FROM TT_Data with(nolock)
			WHERE 1=1
		</MainSQL>
		<Option>
			<Option1 type="if" condition="not_equal" key="PORTID" dataType="string" default="">
				AND PORT_ID LIKE @PORTID
			</Option1>
			<Option2 type="CstStat" condition="CstStat" key="CstStat" dataType="" default="">
				AND CSTSTAT = @CstStat
			</Option2>
			<Option3 type="none" condition="" key="" dataType="" default="">
				ORDER BY REQ_SEQNO DESC
			</Option3>
		</Option>
		<AdditionalVariable>
			<StartDate dataType="DateTime" default=""/>
			<CSTID dataType="string" default=""/>
			<EndDate dataType="DateTime" default=""/>
			<PRCS_TYPE_CODE dataType="string" default=""/>
		</AdditionalVariable>
	</SearchReq>
	<SearchDeleteTransfer>
		<MainSQL>
			SELECT
			CSTID
			, FROM_EQPTID
			, FROM_PORT_iD
			, TO_EQPTID
			, TO_PORT_ID
			, CSTSTAT
			, RTD_RULE_ID
			, CMD_STAT_CODE
			, INSUSER
			, CONVERT(NVARCHAR(20), MAX(INSDTTM),20) AS LASTINSDTTM
			, COUNT(CSTID)  AS CNT
			FROM TB_MHS_TRF_CMD_HIST with(nolock)
			WHERE CONVERT(NVARCHAR(10), INSDTTM, 20) BETWEEN @StartDate AND @EndDate
			AND CMD_STAT_CODE = 'DELETE'
			GROUP BY CSTID, FROM_EQPTID, FROM_PORT_ID, TO_EQPTID, TO_PORT_ID, CSTSTAT, RTD_RULE_ID, CMD_STAT_CODE, INSUSER
			ORDER BY MAX(INSDTTM) DESC
		</MainSQL>
		<Option>
			<Option1  type="none" condition="" key="" dataType="" default="">
				AND (EXCT_MSG LIKE @ErrText OR EXCT_TYPE LIKE @ErrText)
			</Option1>
      <Option2 type="none" condition="" key="" dataType="" default="">
				ORDER BY INSDTTM DESC
			</Option2>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</SearchDeleteTransfer>
	<CstActHistSearch>
		<MainSQL>
			SELECT
			CSTID
			, LOAD_REP_CSTID
			, ACTID
			, CONVERT(CHAR(23), ACTDTTM, 20)  AS ACTDTTM
			, CSTSTAT
			, EQPTID
			, PROCID
			, LOTID
			, TRF_STAT_CODE
			, CST_LOAD_LOCATION_CODE
			, PORT_ID
			, RACK_ID
			, CSTIUSE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			FROM tb_sfc_cst_act_hist with(nolock)
			where ACTDTTM BETWEEN @StartDate AND @EndDate
		</MainSQL>
		<Option>
      <Option1 type="none" condition="" key="" dataType="" default="">
				AND EQPTID like @EQPTID
			</Option1>
      <Option2 type="none" condition="" key="" dataType="" default="">
				AND CSTID like @CSTID
			</Option2>
      <Option3 type="none" condition="" key="" dataType="" default="">
				ORDER BY ACTDTTM DESC
			</Option3>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</CstActHistSearch>
	<CstEventHistSearch>
		<MainSQL>
			SELECT
			CSTID
			, CSTSTAT as 상태
			, LOTID
			, PROCID
			, EQPTID
			, PORT_ID
			, RACK_ID
			, EVENT_CODE
			, EVENT_TYPE_CODE as ETC
			, TRF_END_CODE AS TEC
			, FINL_TO_EQPTID as EQPT_ID
			, FINL_TO_PORT_ID as PORT_ID
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20)  AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20)  AS UPDDTTM
			FROM TB_MHS_TRF_EVENT_HIST with(nolock)
			where CSTID like @CSTID
			and INSDTTM BETWEEN @StartDate AND @EndDate
			ORDER BY INSDTTM DESC
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</CstEventHistSearch>
	<SearchLnsPkgLot>
		<MainSQL>
			SELECT
				C.CSTID
				, C.CSTSTAT as 유형
				, TMR.EQPTID as 설비
				, TMR.RACK_ID as 위치
				, TMR.RACK_STAT_CODE as 상태
				, 'RACK IN' as 자재유형
				, TSFD.DEMAND_TYPE
				, L.LOTTYPE as LT
				, WA.LOTID
				, W.WOID
				, W.PRODID
				, W.PROCID
			FROM WIPATTR WA (NOLOCK)
			INNER JOIN TB_MCS_RACK TMR (NOLOCK)
				ON WA.CSTID = TMR.MCS_CST_ID
			INNER JOIN Carrier c (NOLOCK)
				ON C.CSTID = TMR.MCS_CST_ID
			INNER JOIN LOT L (NOLOCK)
				ON L.LOTID = WA.LOTID
			INNER JOIN WIP W (NOLOCK)
				ON W.LOTID = WA.LOTID
			INNER JOIN TB_SFC_FP_DETL_PLAN TSFD (NOLOCK)
				ON TSFD.WOID = W.WOID
			UNION ALL
			SELECT
				C.CSTID
				, C.CSTSTAT as 유형
				, THTR.EQPTID as 설비
				, THTR.PORT_ID as 위치
				, THTR.REQ_STAT_CODE as 상태
				, 'REQ IN' as 자재유형
				, TSFD.DEMAND_TYPE
				, L.LOTTYPE as LT
				, WA.LOTID
				, W.WOID
				, W.PRODID
				, W.PROCID
			FROM WIPATTR WA (NOLOCK)
			INNER JOIN TB_MHS_TRF_REQ THTR (NOLOCK)
				ON WA.CSTID = THTR.CSTID
			INNER JOIN Carrier c (NOLOCK)
				ON C.CSTID = THTR.CSTID
			INNER JOIN LOT L (NOLOCK)
				ON L.LOTID = WA.LOTID
			INNER JOIN WIP W (NOLOCK)
				ON W.LOTID = WA.LOTID
			INNER JOIN TB_SFC_FP_DETL_PLAN TSFD (NOLOCK)
				ON TSFD.WOID = W.WOID
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</SearchLnsPkgLot>
	<SearchLnsPkgEqp>
		<MainSQL>
			select
			EA.EQPTID
			, EA.WO_DETL_ID
			, TSFD.DEMAND_TYPE
			, EA.EQPT_OPER_MODE as EOM
			, EA.SPCL_LOT_GNRT_FLAG as SLGF
			, LT.LOTTYPE as LT
			, PILOT_PROD_DIVS_CODE as PPDC
			from TB_SFC_FP_DETL_PLAN TSFD (NOLOCK)
			INNER JOIN EioAttr EA (NOLOCK)
			ON EA.WO_DETL_ID = TSFD.WOID
			INNER JOIN LotType LT (NOLOCK)
			ON LT.DEMAND_TYPE = TSFD.DEMAND_TYPE
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
			<CMD_STAT_CODE_LIST dataType="List" default=""/>
		</AdditionalVariable>
	</SearchLnsPkgEqp>
  <SearchCstInfo>
    <MainSQL>
		SELECT C.CSTID
		, C.CSTSTAT AS 상태
		, C.LOAD_REP_CSTID AS 대표CST
		, C.CST_LOAD_LOCATION_CODE AS 단위치
		, C.CURR_RACK_ID AS Rack위치
		, C.CURR_LOTID AS LOT_ID
		, C.ABNORM_TRF_RSN_CODE AS 이상코드
		, C.EQPT_CUR AS EQPTID
		, C.PORT_CUR AS PORT_ID
		, W.ROUTID
		, W.WIPSTAT
		, L.LOTTYPE
		, WA.DAY_GR_LOTID AS ASSY_LOTID
		, WA.FORM_FORC_MANL_PORT
		, WA.SPCL_FLAG
		, WA.SMPL_ISS_TYPE_CODE AS 샘플코드
		, WA.LOT_DETL_TYPE_CODE
		, WA.DFCT_LIMIT_OVER_FLAG
		, WA.SPCL_NOTE
		, WA.FORM_SPCL_GR_ID
		, W.PROCID
		, C.TRAY_TYPE_CODE
		, CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM
		, WA.DFCT_OCCR_EQPTID
		, CONVERT(CHAR(23),WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM
		, WA.SCRP_TRAY_FLAG
		, WA.TRAY_CNVR_BCR_SCAN_COUNT
		FROM Carrier C with(nolock)
		LEFT JOIN WIP W WITH(NOLOCK) ON C.CURR_LOTID = W.LOTID
		LEFT JOIN WIPATTR WA WITH(NOLOCK) ON WA.LOTID = W.LOTID
		LEFT JOIN LOT L WITH(NOLOCK) ON L.LOTID = WA.LOTID
		WHERE (LOAD_REP_CSTID LIKE @CSTID or C.CSTID LIKE @CSTID )
		ORDER BY UPDDTTM DESC,CST_LOAD_LOCATION_CODE DESC
	</MainSQL>
    <Option>
    </Option>
	  <AdditionalVariable>
	  </AdditionalVariable>
  </SearchCstInfo>
	<SearchCstInfo2>
		<MainSQL>
			SELECT C.CSTID
			, C.CSTSTAT
			, C.LOAD_REP_CSTID 
			, C.CST_LOAD_LOCATION_CODE 
			, C.CURR_RACK_ID 
			, C.CURR_LOTID 
			, C.ABNORM_TRF_RSN_CODE
			, C.EQPT_CUR 
			, C.PORT_CUR 
			, W.ROUTID
			, W.WIPSTAT
			, L.LOTTYPE
			, WA.DAY_GR_LOTID 
			, WA.SPCL_FLAG
			, WA.SMPL_ISS_TYPE_CODE 
			, WA.LOT_DETL_TYPE_CODE
			, WA.DFCT_LIMIT_OVER_FLAG
			, WA.SPCL_NOTE
			, WA.FORM_SPCL_GR_ID
			, W.PROCID
			, C.TRAY_TYPE_CODE
			, CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM
			, WA.DFCT_OCCR_EQPTID
			, CONVERT(CHAR(23),WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM
			, WA.SCRP_TRAY_FLAG
			, WA.TRAY_CNVR_BCR_SCAN_COUNT
			FROM Carrier C with(nolock)
			LEFT JOIN WIP W WITH(NOLOCK) ON C.CURR_LOTID = W.LOTID
			LEFT JOIN WIPATTR WA WITH(NOLOCK) ON WA.LOTID = W.LOTID
			LEFT JOIN LOT L WITH(NOLOCK) ON L.LOTID = WA.LOTID
			WHERE (LOAD_REP_CSTID LIKE @CSTID or C.CSTID LIKE @CSTID )
			ORDER BY UPDDTTM DESC,CST_LOAD_LOCATION_CODE DESC
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</SearchCstInfo2>
	<SearchEqpState>
		<MainSQL>
			WITH TT_BUF_SUM AS (
			SELECT
			P.EQPTID,
			ISNULL(sum(CP.MAX_TRF_QTY),0) AS MAX_QTY
			FROM TB_MCS_PORT(NOLOCK) P
			INNER JOIN TB_MCS_CURR_PORT(NOLOCK) CP     ON P.PORT_ID = CP.PORT_ID
			where p.EQPTID like 'C1%'
			GROUP  BY P.EQPTID
			HAVING ISNULL(sum(CP.MAX_TRF_QTY), 0) >= 0
			),
			TT_USING_QTY AS (
			SELECT
			TO_EQPTID
			, ISNULL(COUNT(CSTID),0) AS CMD_USING_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND CSTSTAT = 'U'
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID
			),
			TT_EMPTY_QTY AS (
			SELECT
			TO_EQPTID
			, ISNULL(COUNT(CSTID),0) AS CMD_EMPTY_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND CSTSTAT = 'E'
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID
			)
			,
			TT_TOTAL_QTY AS (
			SELECT
			TOT.EQPTID
			, TOT.MAX_QTY
			, CU.CMD_USING_QTY
			, CE.CMD_EMPTY_QTY
			FROM TT_BUF_SUM  TOT
			LEFT JOIN TT_USING_QTY CU ON TOT.EQPTID = CU.TO_EQPTID
			LEFT JOIN TT_EMPTY_QTY CE ON TOT.EQPTID = CE.TO_EQPTID
			)
			SELECT
			e.EQPTID 
			, e.EQGRID
			, e.EQPTIUSE AS 사용
			, ei.EIOSTAT
			, ei.EIOIFMODE
			, ea.S71 AS LANE_ID
			, CONVERT(VARCHAR(23), ei.UPDDTTM, 20) AS UPDDTTM
			, ISNULL(Q.MAX_QTY,0) AS MAX_CMD
			, ISNULL(Q.CMD_USING_QTY,0) AS 실반송
			, ISNULL(Q.CMD_EMPTY_QTY,0) AS 공반송
			FROM EQUIPMENT e with(nolock)
			INNER JOIN EQUIPMENTATTR ea with(nolock) ON E.EQPTID = ea.EQPTID
			INNER JOIN EIO ei with(nolock) ON e.EQPTID = ei.EQPTID
			LEFT JOIN TT_TOTAL_QTY Q ON e.EQPTID = Q.EQPTID
			WHERE 1 = 1
			--AND E.EQGRID IN ('CNV','PKG','SEL','HPC','DEG','JGF','FOR','DIS','STO','OCV','EOL','OHS')
			AND (E.EQPTIUSE = 'Y'
			AND E.EQGRID IN (@EQP_GROUP_ID_LIST)
			AND E.EQPTID like @AREA_ID
			AND E.EQGRID IN ('CNV','STO','PKG','EOL','FOR','LAM','NND','ROL','COT')
			and LEN(E.EQPTID) = 11)
			OR
			(E.EQPTIUSE = 'Y'
			AND E.EQGRID IN (@EQP_GROUP_ID_LIST)
			AND E.EQPTID like @AREA_ID
			AND E.EQGRID IN ('SEL','HPC','DEG','JGF','DIS','OCV')
			and LEN(E.EQPTID) = 9)
			Order by E.EQPTID
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
			<EQP_GROUP_ID_LIST dataType="List" default=""/>
			<AREA_ID dataType="strig" default=""/>
		</AdditionalVariable>
	</SearchEqpState>

	<SearchEqpGroup>
		<MainSQL>
			SELECT DISTINCT 
				EQGRID
			FROM EQUIPMENT E (NOLOCK)
				INNER JOIN EQUIPMENTSEGMENTATTR ESA (NOLOCK)
			ON E.EQSGID = ESA.EQSGID
			WHERE E.EQSGID like @PLANT_ID
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
			<PLANT_ID dataType="List" default=""/>
	</AdditionalVariable>
	</SearchEqpGroup>
	<SearchPortState>
		<MainSQL>
			select TMCP.PORT_ID
			, TMCP.PORT_STAT_CODE AS 요청
			, E.EIOSTAT
			, MAX_TRF_QTY AS Buffer
			, E.EIOIFMODE
			from TB_MCS_CURR_PORT TMCP (NOLOCK)
			INNER JOIN EIO E (NOLOCK) on e.EQPTID = TMCP.PORT_ID
			INNER JOIN EQUIPMENT EM (NOLOCK) on e.EQPTID = em.EQPTID
		</MainSQL>
		<Option>
			<Option1 type="if" condition="not_equal" key="EQPTID" dataType="string" default="%%">
				where E.EQPTID like @EQPTID
			</Option1>
			<Option2 type="if" condition="not_equal" key="AREA_ID" dataType="string" default="">
				AND E.EQPTID like @AREA_ID
			</Option2>
			<Option3 type="none"  condition="" key="" dataType="" default="">
				Order by TMCP.PORT_ID
			</Option3>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</SearchPortState>
	<SearchPortStateHist>
		<MainSQL>
			select TOP 20
			PORT_ID
			, PORT_STAT_CODE AS 상태
			, ACTDTTM
			, ACTID
			from TB_MCS_PORT_STAT_HIST with (NOLOCK)
			where PORT_ID like @PORT_ID
			ORDER BY ACTDTTM desc
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
			<PORT_ID dataType="string" default=""/>
		</AdditionalVariable>
	</SearchPortStateHist>
	<SearchPortEioHist>
		<MainSQL>
			SELECT TOP 20 EIO.EQPTID, EIO.EIOSTAT, CONVERT(CHAR(23), EIO.EIODTTM , 20) AS EIO_DTTM, MP.MAX_TRF_QTY, CE.CMD_QTY
			FROM EIO EIO WITH(NOLOCK)
			INNER JOIN TB_MCS_CURR_PORT MP WITH(NOLOCK) ON EIO.EQPTID = MP.PORT_ID
			LEFT JOIN(
			SELECT TO_EQPTID, TO_PORT_ID, ISNULL(COUNT(CSTID),0) AS CMD_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID, TO_PORT_ID
			) CE ON EIO.EQPTID = CE.TO_PORT_ID
			WHERE EIO.EQPTID like @PORT_ID
			ORDER BY EIO_DTTM desc
		</MainSQL>
		<Option>
			
		</Option>
		<AdditionalVariable>
			<PORT_ID dataType="string" default=""/>
		</AdditionalVariable>
	</SearchPortEioHist>
	<SearchStkComCode>
		<MainSQL>
			SELECT DISTINCT S70 AS Code,
			CASE
			WHEN S70 = '1' THEN 'CDC STO'
			WHEN S70 = '3' THEN 'HIGH AGING STO'
			WHEN S70 = '4' THEN 'NORM AGING STO'
			WHEN S70 = '7' THEN 'SHIP AGING STO'
			WHEN S70 = '9' THEN 'PRE AGING STO'
			WHEN S70 = 'E' THEN '2nd Empty STO'
			WHEN S70 = 'J' THEN 'JIG STO'
			WHEN S70 = 'LWW' THEN 'LAMI WAIT STO'
			WHEN S70 = 'NPW' THEN 'NND PROD STO'
			WHEN S70 = 'NWW' THEN 'NND WAIT STO'
			WHEN S70 = 'FWW' THEN 'FOIL WAIT STO'
			WHEN S70 = 'JRW' THEN 'JUMBO ROLL STO'
			WHEN S70 = 'PCW' THEN 'PROD COMP STO'
			ELSE 'ETC'
			END AS Sto_Desc
			FROM EQUIPMENT E (NOLOCK)
			INNER JOIN EQUIPMENTSEGMENTATTR ESA (NOLOCK)
			ON E.EQSGID = ESA.EQSGID
			INNER JOIN EquipmentAttr EA
			ON E.EQPTID = EA.EQPTID
			WHERE E.EQSGID like @PLANT_ID
			and E.EQGRID = 'STO'
			and ESA.S38 = @SYSTEM_TYPE_CODE
			and EA.S70 is not NULL
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
			<PLANT_ID dataType="string" default=""/>
			<SYSTEM_TYPE_CODE dataType="string" default=""/>
		</AdditionalVariable>
	</SearchStkComCode>
	<SearchStkInventory>
		<MainSQL>
			SELECT
			C.CSTID
			, (CASE WHEN C.LOAD_REP_CSTID IS NULL THEN C.CSTID ELSE C.LOAD_REP_CSTID END) AS 대표CST
			, CST_LOAD_LOCATION_CODE AS 단
			, CSTSTAT AS 유형
			, C.TRF_STAT_CODE
			, C.EQPT_CUR
			, CONVERT(CHAR(23), WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM
			, W.WIPSTAT
			, W.ROUTID
			, W.PROCID
			, ISNULL(RP2.PROCID, '')  AS NEXT_PROCID
			, ISNULL(RP2.LANE_ID, '')  AS NEXT_LANEID
			, W.LOTID
			, C.PORT_CUR
			, R.RACK_ID
			, R.RACK_STAT_CODE
			, R.ABNORM_STAT_CODE
			, WA.SMPL_ISS_TYPE_CODE
			, CONVERT(CHAR(23), r.UPDDTTM, 20) AS UPDDTTM_S
			, CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM_C
			, AGING_ISS_PRIORITY_NO
			, CASE WHEN DATEDIFF(minute, GETDATE(), AGING_ISS_SCHD_DTTM)> 0 THEN '0' ELSE '1' END AS OUTFLAG
			FROM  (
			SELECT
			C1.CSTID
			, C1.LOAD_REP_CSTID
			, C2.CURR_LOTID
			, C1.CSTSTAT
			, C1.TRF_STAT_CODE
			, C1.EQPT_CUR
			, C1.PORT_CUR
			, C1.CST_LOAD_LOCATION_CODE
			, C1.UPDDTTM
			FROM  (
			SELECT C.CSTID
			, ISNULL(C.LOAD_REP_CSTID, C.CSTID) AS LOAD_REP_CSTID
			, C.CURR_LOTID
			, C.CSTSTAT
			, C.TRF_STAT_CODE
			, C.EQPT_CUR
			, C.PORT_CUR
			, C.CST_LOAD_LOCATION_CODE
			, C.UPDDTTM
			FROM Carrier C WITH(NOLOCK)
			INNER JOIN EQUIPMENTATTR EA WITH(NOLOCK)  ON C.EQPT_CUR =  EA.EQPTID
			WHERE C.CURR_AREAID = @PLANT_ID AND EA.S70 = @STO_CODE
			) AS C1
			INNER JOIN CARRIER C2 WITH(NOLOCK) ON C1.LOAD_REP_CSTID = C2.CSTID
			) AS C
			LEFT JOIN TB_MCS_RACK R WITH(NOLOCK)
			ON R.MCS_CST_ID = C.LOAD_REP_CSTID
			LEFT JOIN WIP W WITH(NOLOCK)
			ON C.CURR_LOTID = W.LOTID
			LEFT JOIN WIPATTR WA WITH(NOLOCK)
			ON WA.LOTID = W.LOTID
			LEFT JOIN TB_MMD_FORM_ROUT_PROC RP WITH(NOLOCK)
			ON RP.ROUTID = W.ROUTID AND RP.PROCID = W.PROCID
			AND RP.USE_FLAG = 'Y'
			LEFT JOIN TB_MMD_FORM_ROUT_PROC RP2 WITH(NOLOCK)
			ON RP2.ROUTID = RP.ROUTID
			AND RP2.PROC_SEQNO = RP.PROC_SEQNO+1
			AND RP2.USE_FLAG = 'Y'
			WHERE 1=1
		</MainSQL>
		<Option>
			<Option1 type="cststat"  condition="not_equal" key="CstStat" dataType="int" default="0">
				AND C.CSTSTAT = @CSTSTAT
			</Option1>
			<Option2 type="none"  condition="none" key="none" dataType="none" default="none">
				ORDER BY
				CASE
				WHEN ISNULL(W.LOTID,'') ='' THEN '1'
				WHEN R.RACK_STAT_CODE ='DISABLE' THEN '2'
				WHEN (AGING_ISS_PRIORITY_NO='8' OR AGING_ISS_PRIORITY_NO='9') THEN '3'
				ELSE '4' END ASC, WA.AGING_ISS_SCHD_DTTM,  (CASE WHEN C.LOAD_REP_CSTID IS NULL THEN C.CSTID ELSE C.LOAD_REP_CSTID END), CST_LOAD_LOCATION_CODE
			</Option2>
		</Option>
		<AdditionalVariable>
			<PLANT_ID dataType="string" default=""/>
			<STO_CODE dataType="string" default=""/>
		</AdditionalVariable>
	</SearchStkInventory>
	<SearchAgingUIHist>
		<MainSQL>
			Select top 100 * from TB_SFC_UI_EVENT_HIST With(nolock)
			WHERE UPDDTTM > CONVERT(DATE,'2023-12-20')
			and EVENT_CNTT LIKE '%AGING%'
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
	</SearchAgingUIHist>
	<SearchStockerCurrState>
		<MainSQL>
			SELECT
			e.EQPTID
			, e.EQPTIUSE AS YN
			, EA.S71 AS LANE_ID
			, ei.EIOSTAT
			, ei.EIOIFMODE
			, ISNULL(R.RACK_MAX_QTY,0) AS RACK_MAX_QTY
			, ISNULL(R.USABLE_QTY,0) AS USABLE_QTY
			, ISNULL(R.USING_QTY, 0) AS USING_QTY
			, ISNULL(R.DISABLE_QTY, 0) AS DISABLE_QTY
			FROM EQUIPMENT e WITH(NOLOCK)
			INNER JOIN EQUIPMENTATTR EA WITH(NOLOCK) ON e.EQPTID = EA.EQPTID
			INNER JOIN EQUIPMENTSEGMENTATTR ESA (NOLOCK) ON E.EQSGID = ESA.EQSGID
			INNER JOIN EIO ei WITH(NOLOCK) ON e.EQPTID = ei.EQPTID
			LEFT JOIN (
			SELECT
			T.EQPTID
			, T.OPTM_LOAD_RATE
			, COUNT(T.RACK_ID) AS RACK_MAX_QTY
			, SUM(T.EMPTY_RACK) AS USABLE_QTY
			, SUM(T.USING_RACK) AS USING_QTY
			, SUM(T.DISABLE_RACK) AS DISABLE_QTY
			FROM (
			SELECT
			CR.EQPTID
			, PW.OPTM_LOAD_RATE
			, CR.RACK_ID
			, CASE WHEN CR.RACK_STAT_CODE = 'USABLE' AND ISNULL(CR.MCS_CST_ID, '') = '' AND CR.FIRE_OCCR_FLAG = 'N' AND CR.USE_FLAG = 'Y' THEN 1
			ELSE 0
			END AS EMPTY_RACK
			, CASE WHEN CR.RACK_STAT_CODE = 'USING'  AND CR.FIRE_OCCR_FLAG = 'N' AND CR.USE_FLAG = 'Y' THEN 1
			ELSE 0
			END AS USING_RACK
			, CASE WHEN CR.RACK_STAT_CODE = 'DISABLE' OR CR.FIRE_OCCR_FLAG = 'Y' OR CR.USE_FLAG = 'N' THEN 1
			ELSE 0
			END AS DISABLE_RACK
			FROM TB_MMD_PRDT_WH    PW WITH(NOLOCK)
			INNER JOIN TB_MMD_RACK MR WITH(NOLOCK)
			ON PW.WH_ID = MR.WH_ID
			AND PW.USE_FLAG = 'Y'
			AND MR.USE_FLAG = 'Y'
			INNER JOIN TB_MCS_RACK CR WITH(NOLOCK)
			ON CR.RACK_ID = MR.RACK_ID  AND CR.USE_FLAG = 'Y'
			WHERE 1 = 1
			AND CR.EQPTID  LIKE 'C1%STO%'
			) AS T
			GROUP BY T.EQPTID, T.OPTM_LOAD_RATE
			) AS R
			ON  E.EQPTID = R.EQPTID
			WHERE 1 = 1
			AND E.EQSGID like @PLANT_ID
			AND E.EQGRID = 'STO'
			AND ESA.S38 = @SYSTEM_TYPE_CODE
			AND EA.S70 = @STO_CODE
			ORDER BY e.EQPTID
		</MainSQL>
		<Option>
		</Option>
		<AdditionalVariable>
			<PLANT_ID dataType="string" default=""/>
			<STO_CODE dataType="string" default=""/>
			<SYSTEM_TYPE_CODE dataType="string" default=""/>
		</AdditionalVariable>
	</SearchStockerCurrState>

</SqlList>