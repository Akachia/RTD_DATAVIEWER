<?xml version="1.0" encoding="utf-8" ?>
<SqlList>
	<SearchCurrentTransportJobList>
		<MainSQL>
			SELECT CC.CSTID
			, H.FROM_PORT_iD AS 요청포트
			, H.TO_PORT_ID AS 목적포트
			, H.CSTSTAT AS 상태
			, CC.CURR_LOTID AS LOTID
			, WA.LANE_ID AS LANE_ID
			, W.EQSGID AS 라인
			, W.ROUTID AS ROUT
			, H.CMD_STAT_CODE AS 현황
			, W.PRODID AS PRODID
			, W.PROCID AS PROCID
			, W.WIPSTAT AS WIP
			, L.LOTTYPE
			, CONVERT(CHAR(23), H.INSDTTM, 20) AS 요청시각
			, CONVERT(CHAR(23), H.UPDDTTM, 20) AS 수정시각
			, CC.ABNORM_TRF_RSN_CODE AS ATRC
			, W.WIPHOLD AS HOLD
			, H.RTD_RULE_ID
			, H.TRF_CODE
			, H.INSUSER AS 요청
			, H.REQ_SEQNO AS 순번
			, H.CNCL_REQ_FLAG AS 취소
			, (CASE WHEN (DATEDIFF(minute, H.INSDTTM, GETDATE())>=60) THEN '1' ELSE 'O' END)  AS CMDCHK
			, H.RSPN_CODE AS RSPN
			, C.CMCDNAME AS ERR_MSG
			FROM CARRIER CC with(nolock)
			INNER JOIN TB_MHS_TRF_CMD H with(nolock) ON H.CSTID = CC.CSTID
			LEFT JOIN WIP W with(nolock) ON W.LOTID = CC.CURR_LOTID
			LEFT JOIN Lot L with(nolock) ON W.LOTID = L.LOTID
			LEFT JOIN WIPATTR WA with(nolock) ON WA.LOTID = W.LOTID
			LEFT JOIN COMMONCODE C with(nolock) ON C.CMCDTYPE = 'TRF_REQ_ERR_CODE' AND C.CMCODE = H.RSPN_CODE
			WHERE 1=1
			AND ISNULL(H.CNCL_REQ_FLAG, '') NOT IN ('Y', 'S')
			+Option1
			+Option2
			+Option3
			+Option4
			+Option5
			+Option6
			+Option7
			<![CDATA[AND H.INSUSER <> 'MCS(SYNC)' ORDER BY H.INSDTTM DESC]]>
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="LANE_ID" dataType="string" default="">
				AND WA.LANE_ID LIKE @LANE_ID
			</Option1>
			<Option2 type="CSTSTAT" condition="CSTSTAT" key="CSTSTAT" dataType="int" default="0">
				AND H.CSTSTAT = @CSTSTAT
			</Option2>
			<Option3 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND (H.CSTID IN (@CSTID) OR H.CSTID LIKE @CSTID)
			</Option3>
			<Option4 type="IF" condition="not_equal" key="ReqPortId" dataType="string" default="">
				AND H.FROM_PORT_ID LIKE @ReqPortId
			</Option4>
			<Option5 type="IF" condition="not_equal" key="ToPortId" dataType="string" default="">
				AND H.TO_PORT_ID LIKE @ToPortId
			</Option5>
			<Option6 type="IF" condition="equal" key="isFaulty" dataType="bool" default="True">
				AND CC.ABNORM_TRF_RSN_CODE = 'STACK_VALID_ERROR 
			</Option6>
			<Option7 type="IF" condition="not_equal" key="CMD_STAT_CODE_LIST" dataType="string" default="">
				AND H.CMD_STAT_CODE IN (@CMD_STAT_CODE_LIST)
			</Option7>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring>
			<상태 Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<U Red="164" Green="201" Blue="255" IsColoringRow="false"/>
				<E Red="228" Green="239" Blue="255" IsColoringRow="false"/>
			</상태>
			<진행상태 Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<MOVING Red="255" Green="227" Blue="238" IsColoringRow="false"/>
				<RECEIVE Red="255" Green="164" Blue="201" IsColoringRow="false"/>
				<SEND Red="255" Green="100" Blue="163" IsColoringRow="false"/>
			</진행상태>
			<HOLD Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<Y Red="255" Green="155" Blue="155" IsColoringRow="true"/>
			</HOLD>
		</Coloring>
		<EventValues>
			<CSTID TYPE='string' CallSQL = 'SearchCarrierInfomation' EventType='Click'/>
			<TRF_CODE TYPE='string' CallSQL = 'SearchTransportJobHistory' EventType='Click'/>
		</EventValues>/>
	</SearchCurrentTransportJobList>
	<SearchTransportJobHistory>
		<MainSQL>
			select
			PORT_ID
			, EVENT_TYPE_CODE as ETC
			, TRF_END_CODE as TEC 
			, EVENT_CODE
			, INSDTTM
			from TB_MHS_TRF_EVENT_HIST with (NOLOCK) 
			WHERE 1=1
			AND TRF_CODE = @TRF_CODE
			order by INSDTTM desc
		</MainSQL>
		<Option>
			<Option1 type="VAR" condition="" key="TRF_CODE" dataType="string" default=""/>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchTransportJobHistory>
	<SearchTransportJobInfomation>
		<MainSQL>
			select
			THTC.CSTID
			, THTC.CSTSTAT
			, THTC.FROM_PORT_ID
			, THTC.TO_PORT_ID
			, THTC.FINL_TRGT_EQPT_ID
			, THTC.CMD_STAT_CODE
			, C.LOAD_REP_CSTID
			, THTC.TRF_CODE
			, THTC.RTD_RULE_ID
			, THTC.REQ_DTTM
			, THTC.TRF_STRT_DTTM
			, THTC.UPDDTTM
			from TB_MHS_TRF_CMD THTC (NOLOCK)
			INNER JOIN CARRIER C (NOLOCK) ON C.CSTID = THTC.CSTID
			WHERE 1 = 1
			+Option1
			+Option2
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND (THTC.CSTID like @CSTID OR  THTC.CSTID = (SELECT LOAD_REP_CSTID FROM CARRIER WITH (NOLOCK) WHERE CSTID like @CSTID))
			</Option1>
			<Option2 type="IF" condition="not_equal" key="REQ_SEQNO" dataType="Bigint" default="0">
				AND REQ_SEQNO LIKE @REQ_SEQNO
			</Option2>
		</Option>
		<AdditionalVariable/>
		<Coloring>
			<CSTSTAT Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<U Red="164" Green="201" Blue="255" IsColoringRow="false"/>
				<E Red="228" Green="239" Blue="255" IsColoringRow="false"/>
			</CSTSTAT>
			<CMD_STAT_CODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<MOVING Red="255" Green="227" Blue="238" IsColoringRow="false"/>
				<RECEIVE Red="255" Green="164" Blue="201" IsColoringRow="false"/>
				<SEND Red="255" Green="100" Blue="163" IsColoringRow="false"/>
			</CMD_STAT_CODE>
		</Coloring>
		<EventValues/>
	</SearchTransportJobInfomation>
	<SearchPortRequestList>
		<MainSQL>
			SELECT
			REQ.REQ_SEQNO as 번호
			, REQ.CSTID AS CSTID
			, REQ.CSTSTAT as 상태
			, EA.S02 AS 극성
			, REQ.EQPTID AS 설비명
			, REQ.PORT_ID AS 포트명
			, REQ.REQ_TYPE_CODE AS 요청
			, REQ.RTD_RULE_ID
			, REQ_TRGT_EQPTID AS 최종EQPT
			, REQ.TRGT_EQPT_MOUNT_PSTN_ID AS UWD번호
			, CONVERT(CHAR(23), REQ.INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), REQ.UPDDTTM, 20) AS UPDDTTM
			, REQ.ERR_CODE
			, C.CMCDNAME AS ERR_DESC
			, REQ.REQ_STAT_CODE
			, REQ.REQ_SEQS
			, REQ.PRCS_TYPE_CODE AS 코드
			, REQ.INSUSER AS 요청자
			, REQ.RTD_EXEC_LOG_CNTT
			FROM TB_MHS_TRF_REQ REQ with(nolock)
			LEFT JOIN COMMONCODE     C with(nolock) ON C.CMCDTYPE = 'TRF_REQ_ERR_CODE' AND C.CMCODE = REQ.ERR_CODE
			LEFT OUTER JOIN EquipmentAttr  EA With (NOLOCK) ON EA.EQPTID = REQ.EQPTID
			WHERE 1 = 1
			AND CONVERT(CHAR(10), REQ.INSDTTM, 20) BETWEEN @StartTime AND @EndTime
			+Option1
			+Option2
			+Option3
			+Option4
			+Option5
			ORDER BY REQ.CSTID, REQ.UPDDTTM DESC
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND (REQ.CSTID IN (@CSTID) OR REQ.CSTID LIKE @CSTID)
			</Option1>
			<Option2 type="IF" condition="not_equal" key="PORTID" dataType="string" default="">
				AND REQ.PORT_ID LIKE @PORTID
			</Option2>
			<Option3 type="IF" condition="not_equal" key="RULEID" dataType="string" default="">
			   AND REQ.RTD_RULE_ID LIKE @RULEID
			</Option3>
			<Option4 type="IF" condition="not_equal" key="REQ_STAT_CODE" dataType="string" default="">
				AND REQ.REQ_STAT_CODE like @REQ_STAT_CODE
			</Option4>
			<Option5 type="IF" condition="not_equal" key="CSTSTAT" dataType="string" default="">
				AND REQ.CSTSTAT = @CSTSTAT
			</Option5>
			<Option6 type="VAR" condition="" key="StartTime" dataType="DateTime" default=""/>
			<Option7 type="VAR" condition="" key="EndTime" dataType="DateTime" default=""/>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring>
			<REQ_STAT_CODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<REQUEST Red="255" Green="212" Blue="212" IsColoringRow="true"/>
				<QUERY Red="255" Green="212" Blue="212" IsColoringRow="true"/>
			</REQ_STAT_CODE>
			<상태 Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<U Red="164" Green="201" Blue="255" IsColoringRow="false"/>
				<E Red="228" Green="239" Blue="255" IsColoringRow="false"/>
			</상태>
		</Coloring>
		<EventValues>
			<CSTID TYPE='string' CallSQL = 'SearchCarrierInfomation' EventType='Click'/>
			<번호 TYPE='Bigint' CallSQL = 'SearchTransportJobInfomation' EventType='Click'/>
			<RTD_EXEC_LOG_CNTT TYPE='string' CallSQL = '' EventType='Click'/>
		</EventValues>
	</SearchPortRequestList>
	<SearchTransportJobRecord>
		<MainSQL>
			SELECT
			CSTID
			, LOTID
			, FROM_EQPTID
			, FROM_PORT_iD
			, TO_EQPTID
			, TO_PORT_ID
			, CSTSTAT
			, RTD_RULE_ID
			, CMD_STAT_CODE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			, (CASE WHEN (DATEDIFF(minute, INSDTTM, GETDATE())>=60) THEN '1' ELSE 'O' END)  AS CMDCHK
			FROM TB_MHS_TRF_CMD_HIST with(nolock)
			WHERE INSDTTM BETWEEN @StartTime AND @EndTime
			+Option1
			+Option2
			+Option3
			+Option4
			+Option5
			+Option6
			order by INSDTTM desc
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="CSTID" dataType="" default="">
				AND CSTID IN (@CSTID)
			</Option1>
			<Option2 type="IF" condition="not_equal" key="ReqPortId" dataType="" default="">
				AND FROM_PORT_ID LIKE @ReqPortId
			</Option2>
			<Option3 type="IF" condition="not_equal" key="ToPortId" dataType="" default="">
				AND TO_PORT_ID LIKE @ToPortId
			</Option3>
			<Option4 type="CSTSTAT" condition="CSTSTAT" key="CSTSTAT" dataType="" default="0">
				AND CSTSTAT = @CSTSTAT
			</Option4>
			<Option5 type="MOVINGSTATE" condition="MOVINGSTATE" key="MOVINGSTATE" dataType="" default="0">
			  AND CMD_STAT_CODE = @MOVINGSTATE
			</Option5>
			<Option6 type="IF" condition="not_equal" key="RuleId" dataType="" default="">
				AND RTD_RULE_ID = @RuleId
			</Option6>
			<Option7 type="VAR" condition="" key="StartTime" dataType="DateTime" default=""/>
			<Option8 type="VAR" condition="" key="EndTime" dataType="DateTime" default=""/>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring>
			<CSTSTAT Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<U Red="164" Green="201" Blue="255" IsColoringRow="false"/>
				<E Red="228" Green="239" Blue="255" IsColoringRow="false"/>
			</CSTSTAT>
		</Coloring>
		<EventValues/>
	</SearchTransportJobRecord>
	<SearchPortRequestHistory>
		<MainSQL>
			WITH TT_DATA AS (
			SELECT top 1000 *
			FROM TB_MHS_TRF_REQ_HIST with(nolock)
			WHERE INSDTTM BETWEEN @StartTime AND @EndTime
			+Option01 --AND CSTID LIKE @CSTID
			+Option02 --AND PRCS_TYPE_CODE like @PRCS_TYPE_CODE
			+Option03
			ORDER BY INSDTTM  DESC
			)
			SELECT
			CSTID
			, CSTSTAT AS 상태
			, REQ_STAT_CODE
			, EQPTID
			, PORT_ID
			, REQ_TYPE_CODE AS 요청
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			, PRCS_TYPE_CODE
			, RTD_RULE_ID
			, REQ_SEQS
			, ERR_CODE
			, RTD_EXEC_LOG_CNTT
			, INSUSER
			, REQ_SEQNO
			FROM TT_Data with(nolock)
			WHERE 1=1
			+Option04
			ORDER BY REQ_SEQNO DESC
		</MainSQL>
		<Option>
			<Option01 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND CSTID IN (@CSTID)
			</Option01>
			<Option02 type="IF" condition="not_equal" key="PRCS_TYPE_CODE" dataType="string" default="">
				AND PRCS_TYPE_CODE like @PRCS_TYPE_CODE
			</Option02>
			<Option03 type="IF" condition="not_equal" key="ReqPortId" dataType="string" default="">
				AND PORT_ID LIKE @ReqPortId
			</Option03>
			<Option04 type="CSTSTAT" condition="CSTSTAT" key="CSTSTAT" dataType="" default="0">
				AND CSTSTAT = @CSTSTAT
			</Option04>
			<Option05 type="VAR" condition="" key="StartTime" dataType="DateTime" default=""/>
			<Option06 type="VAR" condition="" key="EndTime" dataType="DateTime" default=""/>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring>
			<REQ_STAT_CODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<NO_DATA Red="255" Green="164" Blue="201" IsColoringRow="true"/>
			</REQ_STAT_CODE>
		</Coloring>
		<EventValues/>
	</SearchPortRequestHistory>
	<SearchDeleteTransfer>
		<MainSQL>
			SELECT
			CSTID
			, FROM_EQPTID
			, FROM_PORT_iD
			, TO_EQPTID
			, TO_PORT_ID
			, CSTSTAT
			, RTD_RULE_ID
			, CMD_STAT_CODE
			, INSUSER
			, CONVERT(NVARCHAR(20), MAX(INSDTTM),20) AS LASTINSDTTM
			, COUNT(CSTID)  AS CNT
			FROM TB_MHS_TRF_CMD_HIST with(nolock)
			WHERE CONVERT(NVARCHAR(10), INSDTTM, 20) BETWEEN @StartTime AND @EndTime
			AND CMD_STAT_CODE = 'DELETE'
			GROUP BY CSTID, FROM_EQPTID, FROM_PORT_ID, TO_EQPTID, TO_PORT_ID, CSTSTAT, RTD_RULE_ID, CMD_STAT_CODE, INSUSER
		      +Option1
		      +Option2
			--ORDER BY MAX(INSDTTM) DESC
		</MainSQL>
		<Option>
			<Option1 type="NONE" condition="" key="" dataType="" default="">
				AND (EXCT_MSG LIKE @ErrText OR EXCT_TYPE LIKE @ErrText)
			</Option1>
			<Option2 type="NONE" condition="" key="" dataType="" default="">
				ORDER BY INSDTTM DESC
			</Option2>
		</Option>
		<AdditionalVariable/>
		<Coloring/> 
		<EventValues/>
	</SearchDeleteTransfer>
	<SearchCarrierActAbbreviatedRecord>
		<MainSQL>
			SELECT
			+Option1
			CSTID
			, LOAD_REP_CSTID
			, ACTID
			, CONVERT(CHAR(23), ACTDTTM, 20)  AS ACTDTTM
			, CSTSTAT
			, EQPTID
			, PROCID
			, LOTID
			, TRF_STAT_CODE
			, CST_LOAD_LOCATION_CODE
			, PORT_ID
			, RACK_ID
			, CSTIUSE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			FROM tb_sfc_cst_act_hist with(nolock)
			where 1=1
			+Option2
			+Option3
			ORDER BY ACTDTTM DESC
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="TOPNUMBER" dataType="string" default="0">
				TOP @TOPNUMBER
			</Option1>
			<Option2 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND CSTID IN (@CSTID)
			</Option2>
			<Option3 type="IF" condition="not_equal" key="PORT_ID" dataType="string" default="">
				AND PORT_ID LIKE @PORT_ID
			</Option3>
		</Option>
		<AdditionalVariable/>
		<Coloring/>
		<EventValues/>
	</SearchCarrierActAbbreviatedRecord>
	<SearchCarrierEventAbbreviatedRecord>
		<MainSQL>
			SELECT
			+Option1
			CSTID
			, CSTSTAT as 상태
			, LOTID
			, PROCID
			, EQPTID
			, PORT_ID
			, RACK_ID
			, EVENT_CODE
			, EVENT_TYPE_CODE as ETC
			, TRF_END_CODE AS TEC
			, FINL_TO_EQPTID as TO_EQPT_ID
			, FINL_TO_PORT_ID as TO_PORT_ID
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20)  AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20)  AS UPDDTTM
			FROM TB_MHS_TRF_EVENT_HIST with(nolock)
			where 1=1
			+Option2
			+Option3
			ORDER BY INSDTTM DESC
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="TOPNUMBER" dataType="NUM" default="0">
				TOP @TOPNUMBER
			</Option1>
			<Option2 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND CSTID IN (@CSTID)
			</Option2>
			<Option3 type="IF" condition="not_equal" key="PORT_ID" dataType="string" default="">
				AND PORT_ID LIKE @PORT_ID
			</Option3>
		</Option>
		<AdditionalVariable/>
		<Coloring/>  
		<EventValues/>
	</SearchCarrierEventAbbreviatedRecord>
	<SearchCarrierActHistory>
		<MainSQL>
			SELECT
			CSTID
			, LOAD_REP_CSTID
			, ACTID
			, CONVERT(CHAR(23), ACTDTTM, 20)  AS ACTDTTM
			, CSTSTAT
			, EQPTID
			, PROCID
			, LOTID
			, TRF_STAT_CODE
			, CST_LOAD_LOCATION_CODE
			, PORT_ID
			, RACK_ID
			, CSTIUSE
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20) AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20) AS UPDDTTM
			FROM tb_sfc_cst_act_hist with(nolock)
			where 1=1
			+Option1
			+Option2
			AND ACTDTTM BETWEEN @StartTime AND @EndTime
			ORDER BY ACTDTTM DESC
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND CSTID IN (@CSTID)
			</Option1>
			<Option2 type="IF" condition="not_equal" key="PORT_ID" dataType="string" default="">
				AND PORT_ID LIKE @PORT_ID
			</Option2>
			<Option3 type="VAR" condition="" key="StartTime" dataType="DateTime" default=""/>
			<Option4 type="VAR" condition="" key="EndTime" dataType="DateTime" default=""/>
		</Option>
		<AdditionalVariable/>
		<Coloring/>
		<EventValues/>
	</SearchCarrierActHistory>
	<SearchCarrierEventHistory>
		<MainSQL>
			SELECT
			CSTID
			, CSTSTAT as 상태
			, LOTID
			, PROCID
			, EQPTID
			, PORT_ID
			, RACK_ID
			, EVENT_CODE
			, EVENT_TYPE_CODE as ETC
			, TRF_END_CODE AS TEC
			, FINL_TO_EQPTID as TO_EQPT_ID
			, FINL_TO_PORT_ID as TO_PORT_ID
			, INSUSER
			, CONVERT(CHAR(23), INSDTTM, 20)  AS INSDTTM
			, CONVERT(CHAR(23), UPDDTTM, 20)  AS UPDDTTM
			FROM TB_MHS_TRF_EVENT_HIST with(nolock)
			where 1=1
			+Option1
			+Option2
			AND INSDTTM BETWEEN @StartTime AND @EndTime
			ORDER BY INSDTTM DESC
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="CSTID" dataType="string" default="">
				AND CSTID IN (@CSTID)
			</Option1>
			<Option2 type="IF" condition="not_equal" key="PORT_ID" dataType="string" default="">
				AND PORT_ID LIKE @PORT_ID
			</Option2>
			<Option3 type="VAR" condition="" key="StartTime" dataType="DateTime" default=""/>
			<Option4 type="VAR" condition="" key="EndTime" dataType="DateTime" default=""/>
		</Option>
		<AdditionalVariable/>
		<Coloring/>  
		<EventValues/>
	</SearchCarrierEventHistory>
	<SearchWaitingLotList>
		<MainSQL>
			SELECT
				C.CSTID
				, C.CSTSTAT as 유형
				, TMR.EQPTID as 설비
				, TMR.RACK_ID as 위치
				, TMR.RACK_STAT_CODE as 상태
				, 'RACK IN' as 자재유형
				, TSFD.DEMAND_TYPE
				, L.LOTTYPE as LT
				, WA.LOTID
				, W.WOID
				, W.PRODID
				, W.PROCID
			FROM WIPATTR WA (NOLOCK)
			INNER JOIN TB_MCS_RACK TMR (NOLOCK)
				ON WA.CSTID = TMR.MCS_CST_ID
			INNER JOIN Carrier c (NOLOCK)
				ON C.CSTID = TMR.MCS_CST_ID
			INNER JOIN LOT L (NOLOCK)
				ON L.LOTID = WA.LOTID
			INNER JOIN WIP W (NOLOCK)
				ON W.LOTID = WA.LOTID
			INNER JOIN TB_SFC_FP_DETL_PLAN TSFD (NOLOCK)
				ON TSFD.WOID = W.WOID
			UNION ALL
			SELECT
				C.CSTID
				, C.CSTSTAT as 유형
				, THTR.EQPTID as 설비
				, THTR.PORT_ID as 위치
				, THTR.REQ_STAT_CODE as 상태
				, 'REQ IN' as 자재유형
				, TSFD.DEMAND_TYPE
				, L.LOTTYPE as LT
				, WA.LOTID
				, W.WOID
				, W.PRODID
				, W.PROCID
			FROM WIPATTR WA (NOLOCK)
			INNER JOIN TB_MHS_TRF_REQ THTR (NOLOCK)
				ON WA.CSTID = THTR.CSTID
			INNER JOIN Carrier c (NOLOCK)
				ON C.CSTID = THTR.CSTID
			INNER JOIN LOT L (NOLOCK)
				ON L.LOTID = WA.LOTID
			INNER JOIN WIP W (NOLOCK)
				ON W.LOTID = WA.LOTID
			INNER JOIN TB_SFC_FP_DETL_PLAN TSFD (NOLOCK)
				ON TSFD.WOID = W.WOID
		</MainSQL>
		<Option/>
		<AdditionalVariable/>
		<Coloring/>  
		<EventValues/>
	</SearchWaitingLotList>
	<SearchEquipmentCurrentInfomation>
		<MainSQL>
			select
			EA.EQPTID
			, EA.WO_DETL_ID
			, TSFD.DEMAND_TYPE
			, EA.EQPT_OPER_MODE as EOM
			, EA.SPCL_LOT_GNRT_FLAG as SLGF
			, LT.LOTTYPE as LT
			, PILOT_PROD_DIVS_CODE as PPDC
			from TB_SFC_FP_DETL_PLAN TSFD (NOLOCK)
			INNER JOIN EioAttr EA (NOLOCK)
			ON EA.WO_DETL_ID = TSFD.WOID
			INNER JOIN LotType LT (NOLOCK)
			ON LT.DEMAND_TYPE = TSFD.DEMAND_TYPE
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<CMD_STAT_CODE_LIST dataType="List" default=""/>
		</AdditionalVariable>
		<Coloring/>  
		<EventValues/>
	</SearchEquipmentCurrentInfomation>
	<SearchCarrierInfomation>
		<MainSQL>
			SELECT C.CSTID
			, C.CSTSTAT AS 상태
			, C.LOAD_REP_CSTID AS 대표CST
			, C.CST_LOAD_LOCATION_CODE AS 단위치
			, C.CURR_RACK_ID AS Rack위치
			, C.CURR_LOTID AS LOT_ID
			, C.ABNORM_TRF_RSN_CODE AS 이상코드
			, C.EQPT_CUR AS EQPTID
			, C.PORT_CUR AS PORT_ID
			, W.ROUTID
			, W.WIPSTAT
			, L.LOTTYPE
			, WA.DAY_GR_LOTID AS ASSY_LOTID
			, WA.FORM_FORC_MANL_PORT
			, WA.SPCL_FLAG
			, WA.SMPL_ISS_TYPE_CODE AS 샘플코드
			, WA.LOT_DETL_TYPE_CODE
			, WA.DFCT_LIMIT_OVER_FLAG
			, WA.SPCL_NOTE
			, WA.FORM_SPCL_GR_ID
			, W.PROCID
			, C.TRAY_TYPE_CODE
			, CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM
			, WA.DFCT_OCCR_EQPTID
			, CONVERT(CHAR(23),WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM
			, WA.SCRP_TRAY_FLAG
			, WA.TRAY_CNVR_BCR_SCAN_COUNT
			FROM Carrier C with(nolock)
			LEFT JOIN WIP W WITH(NOLOCK) ON C.CURR_LOTID = W.LOTID
			LEFT JOIN WIPATTR WA WITH(NOLOCK) ON WA.LOTID = W.LOTID
			LEFT JOIN LOT L WITH(NOLOCK) ON L.LOTID = WA.LOTID
			WHERE (LOAD_REP_CSTID LIKE @CSTID or C.CSTID LIKE @CSTID )
			ORDER BY UPDDTTM DESC,CST_LOAD_LOCATION_CODE DESC
		</MainSQL>
		<Option/>
		<AdditionalVariable/>
		<Coloring/>  
		<EventValues/>
	</SearchCarrierInfomation>
	<SearchEquipmentCurrentState>
		<MainSQL>
			WITH TT_BUF_SUM AS (
			SELECT
			P.EQPTID,
			ISNULL(sum(CP.MAX_TRF_QTY),0) AS MAX_QTY
			FROM TB_MCS_PORT(NOLOCK) P
			INNER JOIN TB_MCS_CURR_PORT(NOLOCK) CP     ON P.PORT_ID = CP.PORT_ID
			where p.EQPTID like 'C1%'
			GROUP  BY P.EQPTID
			HAVING ISNULL(sum(CP.MAX_TRF_QTY), 0) >= 0
			),
			TT_USING_QTY AS (
			SELECT
			TO_EQPTID
			, ISNULL(COUNT(CSTID),0) AS CMD_USING_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND CSTSTAT = 'U'
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID
			),
			TT_EMPTY_QTY AS (
			SELECT
			TO_EQPTID
			, ISNULL(COUNT(CSTID),0) AS CMD_EMPTY_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND CSTSTAT = 'E'
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID
			)
			,
			TT_TOTAL_QTY AS (
			SELECT
			TOT.EQPTID
			, TOT.MAX_QTY
			, CU.CMD_USING_QTY
			, CE.CMD_EMPTY_QTY
			FROM TT_BUF_SUM  TOT
			LEFT JOIN TT_USING_QTY CU ON TOT.EQPTID = CU.TO_EQPTID
			LEFT JOIN TT_EMPTY_QTY CE ON TOT.EQPTID = CE.TO_EQPTID
			)
			SELECT
			e.EQPTID
			, e.EQGRID
			, e.EQPTIUSE AS 사용
			, ei.EIOSTAT
			, ei.EIOIFMODE
			, ea.S71 AS LANE_ID
			, CONVERT(VARCHAR(23), ei.UPDDTTM, 20) AS UPDDTTM
			, ISNULL(Q.MAX_QTY,0) AS MAX_CMD
			, ISNULL(Q.CMD_USING_QTY,0) AS 실반송
			, ISNULL(Q.CMD_EMPTY_QTY,0) AS 공반송
			FROM EQUIPMENT e with(nolock)
			INNER JOIN EQUIPMENTATTR ea with(nolock) ON E.EQPTID = ea.EQPTID
			INNER JOIN EIO ei with(nolock) ON e.EQPTID = ei.EQPTID
			LEFT JOIN TT_TOTAL_QTY Q ON e.EQPTID = Q.EQPTID
			WHERE 1 = 1
			--AND E.EQGRID IN ('CNV','PKG','SEL','HPC','DEG','JGF','FOR','DIS','STO','OCV','EOL','OHS')
			AND (E.EQPTIUSE = 'Y'
			AND E.EQGRID IN (@EQP_GROUP_ID_LIST)
			AND E.EQPTID like @AREA_ID
			AND E.EQGRID IN ('CNV','STO','PKG','EOL','FOR','LAM','NND','ROL','COT','STK')
			and LEN(E.EQPTID) = 11)
			OR
			(E.EQPTIUSE = 'Y'
			AND E.EQGRID IN (@EQP_GROUP_ID_LIST)
			AND E.EQPTID like @AREA_ID
			AND E.EQGRID IN ('SEL','HPC','DEG','JGF','DIS','OCV')
			and LEN(E.EQPTID) = 9)
			Order by E.EQPTID
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<EQP_GROUP_ID_LIST dataType="NONE" default=""/>
			<AREA_ID dataType="NONE" default=""/>
		</AdditionalVariable>
		<Coloring>
			<EIOSTAT Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<F Red="255" Green="155" Blue="155" IsColoringRow="false"/>
				<T Red="255" Green="214" Blue="165" IsColoringRow="false"/>
				<U Red="255" Green="254" Blue="196" IsColoringRow="false"/>
				<W Red="203" Green="255" Blue="169" IsColoringRow="false"/>
				<R Red="203" Green="255" Blue="169" IsColoringRow="false"/>
			</EIOSTAT>
			<EIOIFMODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<OFF Red="255" Green="158" Blue="158" IsColoringRow="false"/>
				<ON Red="185" Green="243" Blue="252" IsColoringRow="false"/>
			</EIOIFMODE>
			<CSTTYPE Red="255" Green="254" Blue="196" IsColoringColumn="true" IsTimeCompare="false">
				<TRAY Red="255" Green="155" Blue="155" IsColoringRow="false"/>
				<TKAE Red="255" Green="214" Blue="165" IsColoringRow="false"/>
				<U Red="255" Green="254" Blue="196" IsColoringRow="FALSE"/>
			</CSTTYPE>
			<INSDTTM Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="true">
				<TODAY Red="255" Green="155" Blue="155" IsColoringRow="true" condition="FUTURE"/>
				<TOMORROW Red="155" Green="255" Blue="155" IsColoringRow="true" condition="PAST"/>
				<YESTERDAY Red="155" Green="155" Blue="255" IsColoringRow="true" condition="EQUAL"/>
			</INSDTTM>
		</Coloring>
		<EventValues/>
	</SearchEquipmentCurrentState>
	<SearchEquipmentGroupList>
		<MainSQL>
			SELECT DISTINCT 
				EQGRID
			FROM EQUIPMENT E (NOLOCK)
				INNER JOIN EQUIPMENTSEGMENTATTR ESA (NOLOCK)
			ON E.EQSGID = ESA.EQSGID
			WHERE E.EQSGID like @PLANT_ID
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<PLANT_ID dataType="List" default=""/>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchEquipmentGroupList>
	<SearchEquipmentStateHistory>
		<MainSQL>
			select 
			+Option1 
			PORT_ID
			, PORT_STAT_CODE AS 상태
			, ACTDTTM
			, ACTID
			from TB_MCS_PORT_STAT_HIST with (NOLOCK)
			where PORT_ID like @PORT_ID
			ORDER BY ACTDTTM desc
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="TOPNUMBER" dataType="string" default="0">
				TOP @TOPNUMBER
			</Option1>
			<Option2 type="VAR" condition="" key="PORT_ID" dataType="string" default="0"/>
		</Option>
		<AdditionalVariable>
			<PORT_ID dataType="string" default=""/>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchEquipmentStateHistory>
	<SearchEquipmentEioHistory>
		<MainSQL>
			SELECT
			+Option1
			EIO.EQPTID,
			EIO.EIOSTAT,
			CONVERT(CHAR(23), EIO.EIODTTM , 20) AS EIO_DTTM,
			MP.MAX_TRF_QTY,
			CE.CMD_QTY
			FROM EIO EIO WITH(NOLOCK)
			INNER JOIN TB_MCS_CURR_PORT MP WITH(NOLOCK) ON EIO.EQPTID = MP.PORT_ID
			LEFT JOIN(
			SELECT TO_EQPTID, TO_PORT_ID, ISNULL(COUNT(CSTID),0) AS CMD_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID, TO_PORT_ID
			) CE ON EIO.EQPTID = CE.TO_PORT_ID
			WHERE EIO.EQPTID like @PORT_ID
			ORDER BY EIO_DTTM desc
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="TOPNUMBER" dataType="string" default="0">
				TOP @TOPNUMBER
			</Option1>
			<Option2 type="VAR" condition="" key="PORT_ID" dataType="string" default="0"/>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchEquipmentEioHistory>
	<SearchPortCurrentState>
		<MainSQL>
			select TMCP.PORT_ID
				, TMCP.PORT_STAT_CODE AS 요청
				, E.EIOSTAT AS ES
				, MAX_TRF_QTY AS 버퍼
				, E.EIOIFMODE AS EIM
				, EA.EQPT_MAINT_FLAG AS MAINT_FLAG
			from TB_MCS_CURR_PORT TMCP (NOLOCK)
			INNER JOIN EIO E (NOLOCK) on e.EQPTID = LEFT(TMCP.PORT_ID, 15)
			INNER JOIN EQUIPMENT EM (NOLOCK) on e.EQPTID = em.EQPTID
			INNER JOIN EIOATTR EA (NOLOCK) on EA.EQPTID = LEFT(TMCP.PORT_ID, 15)
			where 1=1
			+Option1
			+Option2
			+Option3
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="EQPTID" dataType="string" default="%%">
				AND E.EQPTID like @EQPTID
			</Option1>
			<Option2 type="IF" condition="not_equal" key="AREA_ID" dataType="string" default="">
				AND E.EQPTID like @AREA_ID
			</Option2>
			<Option3 type="NONE" condition="" key="" dataType="" default="">
				Order by TMCP.PORT_ID
			</Option3>
		</Option>
		<AdditionalVariable/>
		<Coloring>
			<ES Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<F Red="255" Green="155" Blue="155" IsColoringRow="false"/>
				<T Red="255" Green="214" Blue="165" IsColoringRow="false"/>
				<U Red="255" Green="254" Blue="196" IsColoringRow="false"/>
				<W Red="203" Green="255" Blue="169" IsColoringRow="false"/>
				<R Red="203" Green="255" Blue="169" IsColoringRow="false"/>
			</ES>
			<EIM Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<OFF Red="255" Green="158" Blue="158" IsColoringRow="false"/>
				<ON Red="185" Green="243" Blue="252" IsColoringRow="false"/>
			</EIM>
			<MAINT_FLAG Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<M Red="255" Green="158" Blue="158" IsColoringRow="true"/>
			</MAINT_FLAG>
		</Coloring>
		<EventValues/>
	</SearchPortCurrentState>
	<SearchPortStateHistory>
		<MainSQL>
			select TOP 20
			PORT_ID
			, PORT_STAT_CODE AS 상태
			, ACTDTTM
			, ACTID
			from TB_MCS_PORT_STAT_HIST with (NOLOCK)
			where PORT_ID like @PORT_ID
			ORDER BY ACTDTTM desc
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<PORT_ID dataType="string" default=""/>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchPortStateHistory>
	<SearchPortEioHistory>
		<MainSQL>
			SELECT TOP 20 EIO.EQPTID, EIO.EIOSTAT, CONVERT(CHAR(23), EIO.EIODTTM , 20) AS EIO_DTTM, MP.MAX_TRF_QTY, CE.CMD_QTY
			FROM EIO EIO WITH(NOLOCK)
			INNER JOIN TB_MCS_CURR_PORT MP WITH(NOLOCK) ON EIO.EQPTID = MP.PORT_ID
			LEFT JOIN(
			SELECT TO_EQPTID, TO_PORT_ID, ISNULL(COUNT(CSTID),0) AS CMD_QTY
			FROM TB_MHS_TRF_CMD WITH(NOLOCK)
			WHERE CMD_STAT_CODE IN('RECEIVE', 'MOVING')
			AND ISNULL(CNCL_REQ_FLAG, '') NOT IN('Y', 'S')
			GROUP BY TO_EQPTID, TO_PORT_ID
			) CE ON EIO.EQPTID = CE.TO_PORT_ID
			WHERE EIO.EQPTID like @PORT_ID
			ORDER BY EIO_DTTM desc
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<PORT_ID dataType="string" default=""/>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchPortEioHistory>
	<SearchStockerCommonCodeList>
		<MainSQL>
			SELECT DISTINCT S70 AS Code,
			CASE
			WHEN S70 = '9' THEN 'PRE AGING STO'
			WHEN S70 = '4' THEN 'HIGH AGING STO'
			WHEN S70 = '3' THEN 'NORM AGING STO'
			WHEN S70 = '7' THEN 'SHIP AGING STO'
			WHEN S70 = 'E' THEN '2nd Empty STO'
			WHEN S70 = '1' THEN 'CDC STO'
			WHEN S70 = 'J' THEN 'JIG STO'
			WHEN S70 = 'LWW' THEN 'LAMI WAIT STO'
			WHEN S70 = 'NPW' THEN 'NND PROD STO'
			WHEN S70 = 'NWW' THEN 'NND WAIT STO'
			WHEN S70 = 'FWW' THEN 'FOIL WAIT STO'
			WHEN S70 = 'JRW' THEN 'JUMBO ROLL STO'
			WHEN S70 = 'PCW' THEN 'PROD COMP STO'
			ELSE 'ETC'
			END AS Sto_Desc
			FROM EQUIPMENT E (NOLOCK)
			INNER JOIN EQUIPMENTSEGMENTATTR ESA (NOLOCK)
			ON E.EQSGID = ESA.EQSGID
			INNER JOIN EquipmentAttr EA
			ON E.EQPTID = EA.EQPTID
			WHERE E.EQSGID like @PLANT_ID
			and E.EQGRID = 'STO'
			and ESA.S38 = @SYSTEM_TYPE_CODE
			and EA.S70 is not NULL
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<PLANT_ID dataType="string" default=""/>
			<SYSTEM_TYPE_CODE dataType="string" default=""/>
		</AdditionalVariable>
		<Coloring/>
		<EventValues/>
	</SearchStockerCommonCodeList>
	<SearchStockerInventory>
		<MainSQL>
			SELECT
			C.CSTID
			, (CASE WHEN C.LOAD_REP_CSTID IS NULL THEN C.CSTID ELSE C.LOAD_REP_CSTID END) AS 대표CST
			, CST_LOAD_LOCATION_CODE AS 단
			, CSTSTAT AS 유형
			, C.TRF_STAT_CODE
			, C.EQPT_CUR
			, CONVERT(CHAR(23), WA.AGING_ISS_SCHD_DTTM, 20) AS AGING_ISS_SCHD_DTTM
			, W.WIPSTAT
			, W.ROUTID
			, W.PROCID
			, ISNULL(RP2.PROCID, '')  AS NEXT_PROCID
			, ISNULL(RP2.LANE_ID, '')  AS NEXT_LANEID
			, W.LOTID
			, C.PORT_CUR
			, R.RACK_ID
			, R.RACK_STAT_CODE
			, R.ABNORM_STAT_CODE
			, WA.SMPL_ISS_TYPE_CODE
			, CONVERT(CHAR(23), r.UPDDTTM, 20) AS UPDDTTM_S
			, CONVERT(CHAR(23), C.UPDDTTM, 20) AS UPDDTTM_C
			, AGING_ISS_PRIORITY_NO
			, CASE WHEN DATEDIFF(minute, GETDATE(), AGING_ISS_SCHD_DTTM)> 0 THEN '0' ELSE '1' END AS OUTFLAG
			FROM  (
			SELECT
			C1.CSTID
			, C1.LOAD_REP_CSTID
			, C2.CURR_LOTID
			, C1.CSTSTAT
			, C1.TRF_STAT_CODE
			, C1.EQPT_CUR
			, C1.PORT_CUR
			, C1.CST_LOAD_LOCATION_CODE
			, C1.UPDDTTM
			FROM  (
			SELECT C.CSTID
			, ISNULL(C.LOAD_REP_CSTID, C.CSTID) AS LOAD_REP_CSTID
			, C.CURR_LOTID
			, C.CSTSTAT
			, C.TRF_STAT_CODE
			, C.EQPT_CUR
			, C.PORT_CUR
			, C.CST_LOAD_LOCATION_CODE
			, C.UPDDTTM
			FROM Carrier C WITH(NOLOCK)
			INNER JOIN EQUIPMENTATTR EA WITH(NOLOCK)  ON C.EQPT_CUR =  EA.EQPTID
			WHERE C.CURR_AREAID = @PLANT_ID AND EA.S70 = @STO_CODE
			) AS C1
			INNER JOIN CARRIER C2 WITH(NOLOCK) ON C1.LOAD_REP_CSTID = C2.CSTID
			) AS C
			LEFT JOIN TB_MCS_RACK R WITH(NOLOCK)
			ON R.MCS_CST_ID = C.LOAD_REP_CSTID
			LEFT JOIN WIP W WITH(NOLOCK)
			ON C.CURR_LOTID = W.LOTID
			LEFT JOIN WIPATTR WA WITH(NOLOCK)
			ON WA.LOTID = W.LOTID
			LEFT JOIN TB_MMD_FORM_ROUT_PROC RP WITH(NOLOCK)
			ON RP.ROUTID = W.ROUTID AND RP.PROCID = W.PROCID
			AND RP.USE_FLAG = 'Y'
			LEFT JOIN TB_MMD_FORM_ROUT_PROC RP2 WITH(NOLOCK)
			ON RP2.ROUTID = RP.ROUTID
			AND RP2.PROC_SEQNO = RP.PROC_SEQNO+1
			AND RP2.USE_FLAG = 'Y'
			WHERE 1=1
			+Option1
			+Option2
			+Option3
		</MainSQL>
		<Option>
			<Option1 type="CSTSTAT" condition="CSTSTAT" key="CSTSTAT" dataType="int" default="0">
				AND C.CSTSTAT = @CSTSTAT
			</Option1>
			<Option2 type="IF" condition="not_equal" key="TRF_STAT_CODE" dataType="string" default="">
				AND C.TRF_STAT_CODE like @TRF_STAT_CODE
			</Option2>
			<Option3 type="NONE" condition="NONE" key="NONE" dataType="NONE" default="NONE">
				ORDER BY
				CASE
				WHEN ISNULL(W.LOTID,'') ='' THEN '1'
				WHEN R.RACK_STAT_CODE ='DISABLE' THEN '2'
				WHEN (AGING_ISS_PRIORITY_NO='8' OR AGING_ISS_PRIORITY_NO='9') THEN '3'
				ELSE '4' END ASC, WA.AGING_ISS_SCHD_DTTM,  (CASE WHEN C.LOAD_REP_CSTID IS NULL THEN C.CSTID ELSE C.LOAD_REP_CSTID END), CST_LOAD_LOCATION_CODE
			</Option3>
		</Option>
		<AdditionalVariable>
			<PLANT_ID dataType="string" default=""/>
			<STO_CODE dataType="string" default=""/>
		</AdditionalVariable>
		<Coloring>
			<TRF_STAT_CODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<RESERVED Red="248" Green="255" Blue="219" IsColoringRow="true"/>
				<MOVING Red="179" Green="255" Blue="174" IsColoringRow="true"/>
			</TRF_STAT_CODE>
			<AGING_ISS_PRIORITY_NO Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				
			</AGING_ISS_PRIORITY_NO>
		</Coloring>
		<EventValues/>
	</SearchStockerInventory>
	<SearchAgingUIHist>
		<MainSQL>
			Select top 100 * from TB_SFC_UI_EVENT_HIST With(nolock)
			WHERE UPDDTTM > CONVERT(DATE,'2023-12-20')
			and EVENT_CNTT LIKE '%AGING%'
		</MainSQL>
		<Option/>
		<AdditionalVariable/>
		<Coloring/>
		<EventValues/>
	</SearchAgingUIHist>
	<SearchStockerCurrentState>
		<MainSQL>
			SELECT
			e.EQPTID
			, e.EQPTIUSE AS YN
			, EA.S71 AS LANE_ID
			, ei.EIOSTAT
			, ei.EIOIFMODE
			, ISNULL(R.RACK_MAX_QTY,0) AS RACK_MAX_QTY
			, ISNULL(R.USABLE_QTY,0) AS USABLE_QTY
			, ISNULL(R.USING_QTY, 0) AS USING_QTY
			, ISNULL(R.DISABLE_QTY, 0) AS DISABLE_QTY
			FROM EQUIPMENT e WITH(NOLOCK)
			INNER JOIN EQUIPMENTATTR EA WITH(NOLOCK) ON e.EQPTID = EA.EQPTID
			INNER JOIN EQUIPMENTSEGMENTATTR ESA (NOLOCK) ON E.EQSGID = ESA.EQSGID
			INNER JOIN EIO ei WITH(NOLOCK) ON e.EQPTID = ei.EQPTID
			LEFT JOIN (
			SELECT
			T.EQPTID
			, T.OPTM_LOAD_RATE
			, COUNT(T.RACK_ID) AS RACK_MAX_QTY
			, SUM(T.EMPTY_RACK) AS USABLE_QTY
			, SUM(T.USING_RACK) AS USING_QTY
			, SUM(T.DISABLE_RACK) AS DISABLE_QTY
			FROM (
			SELECT
			CR.EQPTID
			, PW.OPTM_LOAD_RATE
			, CR.RACK_ID
			, CASE WHEN CR.RACK_STAT_CODE = 'USABLE' AND ISNULL(CR.MCS_CST_ID, '') = '' AND CR.FIRE_OCCR_FLAG = 'N' AND CR.USE_FLAG = 'Y' THEN 1
			ELSE 0
			END AS EMPTY_RACK
			, CASE WHEN CR.RACK_STAT_CODE = 'USING'  AND CR.FIRE_OCCR_FLAG = 'N' AND CR.USE_FLAG = 'Y' THEN 1
			ELSE 0
			END AS USING_RACK
			, CASE WHEN CR.RACK_STAT_CODE = 'DISABLE' OR CR.FIRE_OCCR_FLAG = 'Y' OR CR.USE_FLAG = 'N' THEN 1
			ELSE 0
			END AS DISABLE_RACK
			FROM TB_MMD_PRDT_WH    PW WITH(NOLOCK)
			INNER JOIN TB_MMD_RACK MR WITH(NOLOCK)
			ON PW.WH_ID = MR.WH_ID
			AND PW.USE_FLAG = 'Y'
			AND MR.USE_FLAG = 'Y'
			INNER JOIN TB_MCS_RACK CR WITH(NOLOCK)
			ON CR.RACK_ID = MR.RACK_ID  AND CR.USE_FLAG = 'Y'
			WHERE 1 = 1
			AND CR.EQPTID  LIKE 'C1%STO%'
			) AS T
			GROUP BY T.EQPTID, T.OPTM_LOAD_RATE
			) AS R
			ON  E.EQPTID = R.EQPTID
			WHERE 1 = 1
			AND E.EQSGID like @PLANT_ID
			AND E.EQGRID = 'STO'
			AND ESA.S38 = @SYSTEM_TYPE_CODE
			AND EA.S70 = @STO_CODE
			ORDER BY e.EQPTID
		</MainSQL>
		<Option/>
		<AdditionalVariable>
			<PLANT_ID dataType="string" default=""/>
			<STO_CODE dataType="string" default=""/>
			<SYSTEM_TYPE_CODE dataType="string" default=""/>
		</AdditionalVariable>
		<Coloring>
			<EIOSTAT Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<F Red="255" Green="155" Blue="155" IsColoringRow="false"/>
				<T Red="255" Green="214" Blue="165" IsColoringRow="false"/>
				<U Red="255" Green="254" Blue="196" IsColoringRow="false"/>
				<W Red="203" Green="255" Blue="169" IsColoringRow="false"/>
				<R Red="203" Green="255" Blue="169" IsColoringRow="false"/>
			</EIOSTAT>
			<EIOIFMODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<OFF Red="255" Green="158" Blue="158" IsColoringRow="false"/>
				<ON Red="185" Green="243" Blue="252" IsColoringRow="false"/>
			</EIOIFMODE>
		</Coloring>
		<EventValues/>
	</SearchStockerCurrentState>
	<SearchWaitingWips>
		<MainSQL>
			With WipList AS(
			SELECT
			C.CSTID
			, W.LOTID
			, COUNT(*) AS SectionCount
			, C.EQPT_CUR AS FROM_EQPTID
			, C.PORT_CUR AS FROM_PORT_ID
			, EA.S70 AS TO_EQPT_GROUP_ID
			, R.EQSGID
			, W.PROCID
			, RP.ROUTID
			, WA.PROD_LOTID
			, C.CSTSTAT
			--, E.EQPTID AS TRGT_EQPT_ID
			, MP.PORT_ID AS TRGT_PORT_ID
			--, CM.ATTRIBUTE1  AS AGING
			FROM  CARRIER C (NOLOCK)
			INNER JOIN WIP W (NOLOCK) 							ON C.CURR_LOTID = W.LOTID
			INNER JOIN WIPATTR WA (NOLOCK) 						ON W.LOTID = WA.LOTID
			INNER JOIN TB_MMD_FORM_ROUT_PROC RP (NOLOCK) 		ON RP.ROUTID = W.ROUTID      	AND RP.PROCID = W.PROCID	                AND RP.USE_FLAG = 'Y'
			INNER JOIN TB_MMD_FORM_ROUT R (NOLOCK) 				ON RP.ROUTID = R.ROUTID	        AND R.USE_FLAG='Y'
			INNER JOIN PROCESS P (NOLOCK) 						ON W.PROCID = P.PROCID

			-- 2023-09-18 쿼리 수정
			INNER JOIN PROCESSEQUIPMENT PE (NOLOCK) 			ON W.PROCID = PE.PROCID	        AND PE.USE_FLAG = 'Y'			 AND SUBSTRING (PE.EQPTID ,1,3) = 'C1F'    -- 2022-12-25 조건 추가
			INNER LOOP JOIN EQUIPMENTATTR EA (NOLOCK) 			ON PE.EQPTID = EA.EQPTID
			INNER LOOP JOIN EQUIPMENT E (NOLOCK) 				ON EA.EQPTID = E.EQPTID			AND E.EQPTIUSE = 'Y'
			INNER LOOP JOIN EquipmentSegment EQS WITH(NOLOCK)	ON EQS.EQSGID = E.EQSGID        AND R.AREAID = EQS.AREAID

			-- INNER JOIN EquipmentSegment EQS WITH(NOLOCK)		ON EQS.EQSGID = R.EQSGID		AND R.AREAID = EQS.AREAID
			-- INNER JOIN EQUIPMENT E (NOLOCK) 					ON E.EQSGID = EQS.EQSGID    	AND E.EQPTIUSE = 'Y'
			-- INNER JOIN EQUIPMENTATTR EA (NOLOCK) 				ON EA.EQPTID = E.EQPTID
			-- INNER JOIN PROCESSEQUIPMENT PE (NOLOCK) 			ON PE.EQPTID = E.EQPTID    		AND W.PROCID = PE.PROCID	                AND PE.USE_FLAG = 'Y'

			-- INNER JOIN PROCESSEQUIPMENT PE (NOLOCK) 					ON W.PROCID = PE.PROCID	                AND PE.USE_FLAG = 'Y'			 AND SUBSTRING (PE.EQPTID ,1,3) = 'C1F'    -- 2022-12-25 조건 추가
			-- INNER JOIN EQUIPMENTATTR EA (NOLOCK) 					ON PE.EQPTID = EA.EQPTID
			-- INNER JOIN EQUIPMENT E (NOLOCK) 					ON EA.EQPTID = E.EQPTID					AND E.EQPTIUSE = 'Y'
			-- INNER JOIN EquipmentSegment EQS WITH(NOLOCK)					ON EQS.EQSGID = E.EQSGID                					AND R.AREAID = EQS.AREAID

			INNER JOIN TB_MMD_LANE ML (NOLOCK)
			ON ML.LANE_ID = RP.LANE_ID
			INNER JOIN TB_MMD_LANE ML2 (NOLOCK)
			ON ML2.LANE_ID = EA.S71
			INNER JOIN TB_MMD_MHS_TRF_REQ_EQPT_SECTION ES WITH(NOLOCK)
			ON
			--ES.REQ_PORT_ID ='C1FSTO12301-'					AND
			ES.TRGT_EQPT_ID = E.EQPTID
			AND ES.CSTSTAT = C.CSTSTAT
			AND ES.USE_FLAG ='Y'
			INNER JOIN TB_MCS_PORT MP WITH(NOLOCK)
			ON MP.IF_EQPTID = E.EQPTID
			AND MP.USE_FLAG ='Y'
			INNER JOIN EioAttr EIA (NOLOCK)
			ON EA.EQPTID = EIA.EQPTID
			INNER JOIN Eio EIO (NOLOCK)
			ON EA.EQPTID = EIO.EQPTID
			INNER JOIN TB_MMD_EQPT_PROG_ENABLE_ROUT PEM WITH(NOLOCK)
			ON PEM.EQPTID = E.EQPTID
			AND PEM.ROUTID = W.ROUTID
			AND PEM.USE_FLAG ='Y'
			INNER JOIN TB_MMD_EQPT_PROG_ENABLE_MDLLOT PEL WITH(NOLOCK)
			ON PEM.EQPTID = PEL.EQPTID
			AND PEL.MDLLOT_ID  = R.MDLLOT_ID
			AND PEL.USE_FLAG = 'Y'
			where C.TRAY_TYPE_CODE IN ('TKAD', 'TKAE')
			group by C.CSTID, EA.S70, R.EQSGID, W.PROCID, W.LOTID, RP.ROUTID, WA.PROD_LOTID, C.EQPT_CUR , C.PORT_CUR, C.CSTSTAT, MP.PORT_ID
			)
			select 	wl.CSTID
			, wl.LOTID
			, wl.CSTSTAT
			, TMTR.REQ_STAT_CODE
			, wl.SectionCount
			, wl.FROM_PORT_ID
			, TMTC.TO_PORT_ID
			, wl.TRGT_PORT_ID
			, MP.PORT_STAT_CODE
			, wl.TO_EQPT_GROUP_ID
			, wl.EQSGID
			, wl.PROCID
			, wl.ROUTID
			, wl.PROD_LOTID
			from WipList wl
			INNER JOIN COMMONCODE CM (NOLOCK)
			ON CM.CMCDTYPE = 'EQPT_GR_TYPE_CODE'
			AND CM.CMCDIUSE= 'Y'
			AND CM.CMCODE = wl.TO_EQPT_GROUP_ID
			INNER JOIN WIPATTR WA (NOLOCK)
			ON wl.LOTID = WA.LOTID
			INNER JOIN TB_MCS_CURR_PORT MP WITH(NOLOCK)
			ON MP.PORT_ID = wl.TRGT_PORT_ID
			LEFT OUTER JOIN TB_MHS_TRF_REQ TMTR (NOLOCK)
			ON TMTR.CSTID = wl.CSTID
			LEFT OUTER JOIN TB_MHS_TRF_CMD TMTC (NOLOCK)
			ON TMTC.CSTID = wl.CSTID
			where CM.ATTRIBUTE1 is null
			order by CSTID
		</MainSQL>
		<Option/>
		<AdditionalVariable/>
		<Coloring>
			<EIOSTAT Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<F Red="255" Green="155" Blue="155" IsColoringRow="false"/>
				<T Red="255" Green="214" Blue="165" IsColoringRow="false"/>
				<U Red="255" Green="254" Blue="196" IsColoringRow="false"/>
				<W Red="203" Green="255" Blue="169" IsColoringRow="false"/>
				<R Red="203" Green="255" Blue="169" IsColoringRow="false"/>
			</EIOSTAT>
			<EIOIFMODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<OFF Red="255" Green="158" Blue="158" IsColoringRow="false"/>
				<ON Red="185" Green="243" Blue="252" IsColoringRow="false"/>
			</EIOIFMODE>
		</Coloring>
		<EventValues/>
	</SearchWaitingWips>
	<SearchRollCurrentSituation>
		<MainSQL>
			<![CDATA[
			DECLARE @SKID_USE_CHECK BIT =
			(
			SELECT IIF(COUNT(A.ATTRIBUTE1)=0,'FALSE','TRUE') AS SKID_UNUSE_FLAG
			  FROM EZMES.COMMONCODE A (NOLOCK)
			 WHERE A.CMCDTYPE = 'MHS_UNCHECK_SKID_BOBBIN_MAPPING'
			   AND A.CMCODE = 'EO'
			   AND A.CMCDIUSE = 'Y'
			   AND A.ATTRIBUTE1 = 'Y'
			)
			SELECT VP.S01 AS PRJT_NAME
			, IIF('EO' = 'SWW', NULL, VP.S08) AS 극성
			, EZMES.FN_GET_CMCODE_NAME('ko-KR', 'ELTR_TYPE_CODE', IIF('EO' = 'SWW', NULL, VP.S08)) AS ELTR_TYPE
			, WH.WH_ID AS EQPTID
			, EZMES.EZMES_FN_GET_NAME('ko-KR', E_WH.EQPTNAME) AS EQPTNAME
			, IIF('EO' = 'SWW', NULL, LA.PROD_VER_CODE) AS PROD_VER_CODE
			, VP.PRODID
			, IIF('EO' = 'SWW', NULL, ISNULL(LA.HALF_SLIT_SIDE,'A')) AS 무지부
			, IIF('EO' = 'SWW', NULL, ISNULL(WA.EM_SECTION_ROLL_DIRCTN , 'A')) AS 권치
			, IIF(IIF('EO' = 'SWW', NULL, ISNULL(LA.HALF_SLIT_SIDE,'A')) = 'A'
			, 'A'
			, EZMES.FN_GET_CMCODE_NAME('ko-KR', 'WRK_HALF_SLIT_SIDE', IIF('EO' = 'SWW', NULL, ISNULL(LA.HALF_SLIT_SIDE,'A')))) +
			'/' +
			IIF(IIF('EO' = 'SWW', NULL, ISNULL(WA.EM_SECTION_ROLL_DIRCTN , 'A')) = 'A'
			, 'A'
			, EZMES.FN_GET_CMCODE_NAME('ko-KR', 'EM_SECTION_ROLL_DIRCTN', IIF('EO' = 'SWW', NULL, ISNULL(WA.EM_SECTION_ROLL_DIRCTN, 'A')))) AS HALF_ROLL
			, COUNT(W.LOTID) AS LOT_TOTAL_QTY
			--, COUNT(W.LOTID) - SUM(IIF(W.WIPHOLD = 'Y', 1, 0)) - SUM(IIF(W.WIPHOLD <> 'Y' AND ISNULL(BR.FINL_HOLD_FLAG, 'N') = 'Y' , 1, 0))- SUM(IIF(W.WIPHOLD <> 'Y' AND ISNULL(WA.QMS_HOLD_FLAG,'N') = 'Y', 1, 0)) AS LOT_QTY
			, IIF('JRW' NOT IN ('NPW','LWW','SWW')
			, COUNT(W.LOTID) - SUM(IIF(W.WIPHOLD = 'Y', 1, 0)) - SUM(IIF(W.WIPHOLD <> 'Y' AND ISNULL(BR.FINL_HOLD_FLAG, 'N') = 'Y' , 1, 0))
			, COUNT(W.LOTID) - SUM(IIF(W.WIPHOLD = 'Y', 1, 0)) - SUM(IIF(W.WIPHOLD <> 'Y' AND ISNULL(WA.QMS_HOLD_FLAG, 'N') = 'Y' , 1, 0)))  AS LOT_QTY
			, SUM(IIF(W.WIPHOLD = 'Y', 1, 0)) AS LOT_HOLD_QTY
			, SUM(IIF(W.WIPHOLD <> 'Y' AND ISNULL(BR.FINL_HOLD_FLAG, 'N') = 'Y' , 1, 0)) AS LOT_HOLD_QMS_QTY
			, SUM(IIF(W.WIPHOLD <> 'Y' AND ISNULL(WA.QMS_HOLD_FLAG,'N') = 'Y', 1, 0)) AS LOT_HOLD_QMS_QTY_ETC -- 노칭완성, Lami대기, STK 완성
			FROM EZMES.TB_MCS_RACK R (NOLOCK)
			INNER LOOP JOIN EZMES.CARRIER C (NOLOCK) ON C.CSTID = R.MCS_CST_ID
			INNER LOOP JOIN EZMES.EQUIPMENT E (NOLOCK) ON E.EQPTID = R.EQPTID
			INNER LOOP JOIN EZMES.EQUIPMENTATTR EA (NOLOCK) ON EA.EQPTID = R.EQPTID
			INNER HASH JOIN (-- ※ CWA3동 전극창고(코터~롤프레스) RACK 에는 BOBBIN 이 들어간다. 그 외는 SKID 가 들어감
			-- ★ INFO_ID : RACK INFORMATION (SKID, BOBBIN ID, GROUP CSTID)
			-- ◆ CNT_ID  : LOT COUNT (BOBBIN ID)
			SELECT C.CSTTYPE, ISNULL(C.OUTER_CSTID, C.CSTID) AS INFO_ID, C.CSTID AS CNT_ID, C.CURR_LOTID, C.CSTINDTTM
			FROM EZMES.CARRIER C (NOLOCK)
			WHERE C.CSTTYPE = 'BB'                 -- 조립 BOBBIN
			AND (@SKID_USE_CHECK = 'TRUE' OR C.OUTER_CSTID IS NOT NULL)
			AND C.CSTIUSE = 'Y'
			UNION
			SELECT C.CSTTYPE, C.CSTID, C.CSTID, C.CURR_LOTID, C.CSTINDTTM
			FROM EZMES.CARRIER C (NOLOCK)
			WHERE C.CSTTYPE = 'EB'  -- 전극 BOBBIN
			AND C.OUTER_CSTID IS NULL   -- 점보롤창고 (OUTER_CSTID에 SKID가 없다.)
			AND C.CSTIUSE = 'Y'
			UNION
			SELECT C.CSTTYPE, ISNULL(C.GR_CSTID, C.CSTID), C.CSTID, C.CURR_LOTID, C.CSTINDTTM
			FROM EZMES.CARRIER C (NOLOCK)
			WHERE C.CSTTYPE = 'BK'  -- STK/PKG CELL
			AND C.CSTIUSE = 'Y'
			) CL ON C.CSTID = CL.INFO_ID
			INNER LOOP JOIN EZMES.TB_MMD_RACK MR (NOLOCK) ON MR.RACK_ID = R.RACK_ID
			INNER LOOP JOIN EZMES.TB_MMD_PRDT_WH WH (NOLOCK) ON WH.WH_ID = MR.WH_ID
			INNER LOOP JOIN EZMES.EQUIPMENT E_WH (NOLOCK) ON E_WH.EQPTID = WH.WH_ID
			INNER LOOP JOIN EZMES.EQUIPMENTATTR EA_WH (NOLOCK) ON EA_WH.EQPTID = WH.WH_ID
			INNER LOOP JOIN EZMES.WIP W (NOLOCK) ON W.LOTID = CL.CURR_LOTID
			INNER LOOP JOIN EZMES.WIPATTR WA (NOLOCK) ON WA.LOTID = W.LOTID
			INNER LOOP JOIN EZMES.LOT L (NOLOCK) ON L.LOTID = CL.CURR_LOTID
			INNER LOOP JOIN EZMES.LOTATTR LA (NOLOCK) ON LA.LOTID = CL.CURR_LOTID
			INNER LOOP JOIN EZMES.LOTTYPE LT (NOLOCK) ON LT.LOTTYPE = L.LOTTYPE
			/*튜닝 적용 - VIEW문 변경*/
			--INNER JOIN EZMES.VW_PRODUCT VP (NOLOCK) ON VP.PRODID = W.PRODID
			INNER LOOP JOIN EZMES.PRODUCT PR (NOLOCK) ON PR.PRODID = W.PRODID AND PR.PRODIUSE = 'Y'
			INNER LOOP JOIN EZMES.PRODUCTATTR VP (NOLOCK) ON VP.PRODID = PR.PRODID
			INNER LOOP JOIN EZMES.EQUIPMENTSEGMENT ES (NOLOCK) ON ES.EQSGID = E.EQSGID
			/*튜닝 적용 - 조인 변경*/
			--LEFT OUTER LOOP JOIN EZMES.TB_SFC_WIP_BLOCK_RSLT BR (NOLOCK) ON BR.LOTID = W.LOTID AND BR.BLOCK_TYPE_CODE = (SELECT ATTRIBUTE1 FROM EZMES.COMMONCODE WHERE CMCDTYPE = 'BLOCK_TYPE_BY_EQGR' AND CMCODE = EA.S70)
			LEFT OUTER LOOP JOIN EZMES.COMMONCODE CC WITH(NOLOCK) ON CC.CMCODE = EA.S70 AND CMCDTYPE = 'BLOCK_TYPE_BY_EQGR'
			LEFT OUTER LOOP JOIN EZMES.TB_SFC_WIP_BLOCK_RSLT BR (NOLOCK)ON BR.LOTID = W.LOTID AND BR.BLOCK_TYPE_CODE = CC.ATTRIBUTE1
			/*사용되지 않는 OUTER APPLY 삭제 필요
			OUTER APPLY(SELECT SUM(MC.DFCT_TAG_QTY) AS DFCT_TAG_QTY
			FROM EZMES.TB_SFC_MOVE_WIPREASONCOLLECT MC (NOLOCK)
			WHERE MC.LOTID = W.LOTID
			AND MC.ACTID = 'DEFECT_LOT' ) MC */
			WHERE 1 = 1
			AND R.USE_FLAG = 'Y'
			--   AND R.RACK_STAT_CODE = 'USING'
			AND R.ABNORM_STAT_CODE IS NULL
			AND C.CSTIUSE = 'Y'
			AND ISNULL(C.ABNORM_TRF_RSN_CODE, 'N') = 'N'
			AND MR.USE_FLAG = 'Y'
			AND WH.USE_FLAG = 'Y'
			AND E.EQPTIUSE = 'Y'
			AND E_WH.EQPTIUSE = 'Y'
			/*튜닝 적용 - VIEW문 변경으로 PRODUCT 테이블 조건으로  */
			--AND VP.PRODIUSE = 'Y'
			AND ES.EQSGIUSE = 'Y'
			AND ('NORMAL' != 'FIFO' OR     --조건출고
			W.WIPSTAT <> 'TERM' AND W.WIPQTY > 0 AND W.WIPHOLD = 'N' AND R.RACK_STAT_CODE = 'USING') --FIFO출고
			AND ES.AREAID IN (SELECT A.AREAID
			FROM EZMES.VW_AREA A
			INNER JOIN EZMES.VW_AREA B ON B.BLDG_CODE = A.BLDG_CODE AND B.AREAID = 'EO') -- 동
			AND EA.S70 = ISNULL('JRW', EA.S70)
			-- AND EA_WH.EQPTID = ISNULL(@EQPTID, EA_WH.EQPTID)
			--  AND COALESCE(EA_WH.S02, EA.S02, '') = COALESCE(@ELTR_TYPE_CODE, EA_WH.S02, EA.S02, '')
			GROUP BY VP.S01
			, IIF('EO' = 'SWW', NULL, VP.S08)
			, WH.WH_ID
			, E_WH.EQPTNAME
			, IIF('EO' = 'SWW', NULL, LA.PROD_VER_CODE)
			, VP.PRODID
			, IIF('EO' = 'SWW', NULL, ISNULL(LA.HALF_SLIT_SIDE,'A'))
			, IIF('EO' = 'SWW', NULL, ISNULL(WA.EM_SECTION_ROLL_DIRCTN , 'A'))]]></MainSQL>
		<Option/>
		<AdditionalVariable/>
		<Coloring>
			<EIOSTAT Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<F Red="255" Green="155" Blue="155" IsColoringRow="false"/>
				<T Red="255" Green="214" Blue="165" IsColoringRow="false"/>
				<U Red="255" Green="254" Blue="196" IsColoringRow="false"/>
				<W Red="203" Green="255" Blue="169" IsColoringRow="false"/>
				<R Red="203" Green="255" Blue="169" IsColoringRow="false"/>
			</EIOSTAT>
			<EIOIFMODE Red="255" Green="155" Blue="155" IsColoringColumn="false" IsTimeCompare="false">
				<OFF Red="255" Green="158" Blue="158" IsColoringRow="false"/>
				<ON Red="185" Green="243" Blue="252" IsColoringRow="false"/>
			</EIOIFMODE>
		</Coloring>
		<EventValues/>
	</SearchRollCurrentSituation>
	<SearchBizRuleError>
		<MainSQL>
			SELECT TOP 1000
			INSDTTM
			, EXCT_PARA
			, BZRULE_ID
			, EXCT_MSG
			, DATASET
			, UPDDTTM
			, EXCT_TYPE
			, EXCT_LOCATION
			FROM TB_SOM_BZRULE_ERR_HIST WITH (NOLOCK)
			WHERE 1=1
			AND INSDTTM BETWEEN @StartTime AND @EndTime
			+Option1
			+Option2
			ORDER BY INSDTTM DESC
		</MainSQL>
		<Option>
			<Option1 type="IF" condition="not_equal" key="ErrorText" dataType="string" default="">
				AND	EXCT_MSG like @ErrorText
			</Option1>
			<Option2 type="IF" condition="not_equal" key="BizRuleID" dataType="string" default="">
				AND	BZRULE_ID like @BizRuleID
			</Option2>
			<Option3 type="VAR" condition="" key="StartTime" dataType="DateTime" default=""/>
			<Option4 type="VAR" condition="" key="EndTime" dataType="DateTime" default=""/>
		</Option>
		<AdditionalVariable>
		</AdditionalVariable>
		<Coloring/>
		<EventValues>
			<EXCT_TYPE TYPE='string' CallSQL = '' EventType='Click'/>
			<EXCT_LOCATION TYPE='string' CallSQL = '' EventType='Click'/>
		</EventValues>
	</SearchBizRuleError>
</SqlList>